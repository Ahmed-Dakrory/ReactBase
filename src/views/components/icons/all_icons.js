export const Car = ({ width, height, color }) => {
  // ** State
  return (
    <svg width={width} height={height} viewBox="0 0 18 12" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M16.3009 4.04215C16.2897 4.02931 16.2801 4.01682 16.2669 4.00432L15.6828 3.4446C16.1672 3.33549 16.6887 2.9325 16.6887 2.51905C16.6887 2.03735 16.0155 1.86643 15.441 1.86643C14.8402 1.86643 14.7705 2.27516 14.7634 2.56397L13.2564 1.12126C12.9503 0.820288 12.3696 0.583496 11.9356 0.583496H9.00064H8.99996H6.06435C5.63064 0.583496 5.05032 0.820288 4.74383 1.12126L3.23724 2.56397C3.22942 2.27516 3.15969 1.86643 2.55964 1.86643C1.98442 1.86643 1.31158 2.03735 1.31158 2.51905C1.31158 2.9325 1.83339 3.33549 2.31778 3.4446L1.73372 4.00432C1.72045 4.01682 1.71127 4.02931 1.6997 4.04215C1.07482 4.57248 0.666626 5.55614 0.666626 6.26989V8.39089C0.666626 8.90568 0.871064 9.37285 1.20136 9.72111V10.5436C1.20136 11.0247 1.60684 11.4168 2.10552 11.4168H3.19881C3.69749 11.4168 4.10262 11.0253 4.10262 10.5436V10.3332H8.99996H9.00064H13.8976V10.5436C13.8976 11.0253 14.3024 11.4168 14.8018 11.4168H15.8947C16.3938 11.4168 16.7986 11.0247 16.7986 10.5436V9.72111C17.1292 9.37285 17.3333 8.90568 17.3333 8.39089V6.26989C17.334 5.55614 16.9258 4.57248 16.3009 4.04215ZM5.29728 1.76239C5.5092 1.58708 5.87964 1.45399 6.06435 1.45399H8.99996H9.00064H11.9363C12.121 1.45399 12.4914 1.58708 12.7033 1.76239L14.6793 3.66416H9.00064H8.99996H3.3216L5.29728 1.76239ZM1.34457 5.94899C1.34457 5.42676 1.75617 5.00283 2.26438 5.00283C2.77224 5.00283 4.4319 5.97027 4.4319 6.4925C4.4319 7.01472 2.77224 6.89379 2.26438 6.89379C1.75617 6.89379 1.34457 6.47155 1.34457 5.94899ZM4.10296 9.40325H3.92778H3.75259L2.71339 9.40494C2.42493 9.31576 2.22151 9.21172 2.07763 9.09991C2.00483 9.0435 1.94904 8.98473 1.9055 8.92629C1.86162 8.86717 1.82965 8.80907 1.8089 8.75097C1.67963 8.38818 1.94666 8.05478 1.94666 8.05478H3.72028L4.90269 9.40257L4.10296 9.40325ZM11.5505 9.40393H9.00064H8.99996H6.45009C5.91842 9.40393 5.48675 8.97527 5.48675 8.44764H8.99996H9.00064H12.5139C12.5139 8.97594 12.0822 9.40393 11.5505 9.40393ZM11.7743 7.79502H9.00064H8.99996H6.22626C5.64798 7.79502 5.17856 7.08701 5.17856 6.21382H8.99996H9.00064H12.822C12.822 7.08735 12.3526 7.79502 11.7743 7.79502ZM16.192 8.75165C16.171 8.80975 16.139 8.86785 16.0951 8.92663C16.0519 8.98506 15.9961 9.04384 15.923 9.10025C15.7794 9.21206 15.5757 9.31678 15.2872 9.40528L14.248 9.40359H14.0728H13.8976H13.0972L14.2803 8.0558H16.0536C16.0536 8.05546 16.321 8.38819 16.192 8.75165ZM15.7362 6.89379C15.2287 6.89379 13.569 7.01405 13.569 6.4925C13.569 5.97094 15.2287 5.00283 15.7362 5.00283C16.2444 5.00283 16.656 5.42676 16.656 5.94899C16.656 6.47088 16.2444 6.89379 15.7362 6.89379Z" fill={color} />
    </svg>
  )
}

export const Collapse = ({ width, height, color }) => {

  return (
    <svg width={width} height={height} viewBox="0 0 4 18" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M2 10C2.55228 10 3 9.55228 3 9C3 8.44772 2.55228 8 2 8C1.44772 8 1 8.44772 1 9C1 9.55228 1.44772 10 2 10Z" stroke={color} strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
<path d="M2 3C2.55228 3 3 2.55228 3 2C3 1.44772 2.55228 1 2 1C1.44772 1 1 1.44772 1 2C1 2.55228 1.44772 3 2 3Z" stroke={color} strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
<path d="M2 17C2.55228 17 3 16.5523 3 16C3 15.4477 2.55228 15 2 15C1.44772 15 1 15.4477 1 16C1 16.5523 1.44772 17 2 17Z" stroke={color} strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</svg>

  )
} 

export const Home = ({ width, height, color }) => {
  // ** State
  return (
    <svg width={width} height={height} viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M3.16667 6.50018V13.1668M6.91667 6.50018V13.1668M11.0833 6.50018V13.1668M14.8333 6.50018V13.1668M1.5 14.5002L1.5 15.1668C1.5 15.6336 1.5 15.8669 1.59083 16.0452C1.67072 16.202 1.79821 16.3295 1.95501 16.4094C2.13327 16.5002 2.36662 16.5002 2.83333 16.5002H15.1667C15.6334 16.5002 15.8667 16.5002 16.045 16.4094C16.2018 16.3295 16.3293 16.202 16.4092 16.0452C16.5 15.8669 16.5 15.6336 16.5 15.1668V14.5002C16.5 14.0335 16.5 13.8001 16.4092 13.6219C16.3293 13.4651 16.2018 13.3376 16.045 13.2577C15.8667 13.1668 15.6334 13.1668 15.1667 13.1668H2.83333C2.36662 13.1668 2.13327 13.1668 1.95501 13.2577C1.79821 13.3376 1.67072 13.4651 1.59083 13.6219C1.5 13.8001 1.5 14.0335 1.5 14.5002ZM8.71076 1.56446L2.54409 2.93483C2.17154 3.01761 1.98527 3.05901 1.84622 3.15918C1.72358 3.24754 1.62727 3.36759 1.56762 3.50648C1.5 3.66395 1.5 3.85477 1.5 4.23641L1.5 5.16685C1.5 5.63356 1.5 5.86691 1.59083 6.04517C1.67072 6.20197 1.79821 6.32946 1.95501 6.40935C2.13327 6.50018 2.36662 6.50018 2.83333 6.50018H15.1667C15.6334 6.50018 15.8667 6.50018 16.045 6.40935C16.2018 6.32946 16.3293 6.20197 16.4092 6.04517C16.5 5.86691 16.5 5.63356 16.5 5.16685V4.23641C16.5 3.85477 16.5 3.66395 16.4324 3.50649C16.3727 3.36759 16.2764 3.24754 16.1538 3.15918C16.0147 3.05901 15.8285 3.01762 15.4559 2.93483L9.28924 1.56446C9.1813 1.54047 9.12733 1.52848 9.0728 1.52369C9.02436 1.51945 8.97564 1.51945 8.9272 1.52369C8.87267 1.52848 8.8187 1.54047 8.71076 1.56446Z" stroke={color} strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
    </svg>

  )
}

export const Loader2 = ({ width, height, color }) => {
  // ** State
  return (
    <svg width={width} height={height} viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M10 1.875V3.95833M10 15V18.3333M4.79167 10H1.875M17.7083 10H16.4583M15.3809 15.3809L14.7917 14.7917M15.5535 4.51316L14.375 5.69167M4.10131 15.8987L6.45833 13.5417M4.2739 4.34057L6.04167 6.10833" stroke={color} strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
    </svg>

  )
}

// export const CheckVerified = ({ width, height, color }) => {
//   // ** State
//   return (
//     <svg width={width} height={height} viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
//       <g clipPath="url(#clip0_772_3051)">
//         <path d="M7.50008 9.99984L9.16675 11.6665L12.9167 7.9165M14.9177 4.16526C15.0893 4.58028 15.4187 4.91017 15.8335 5.0824L17.2878 5.68482C17.7028 5.85674 18.0326 6.1865 18.2045 6.60155C18.3764 7.01661 18.3764 7.48296 18.2045 7.89801L17.6025 9.35134C17.4305 9.76658 17.4303 10.2334 17.6031 10.6484L18.204 12.1013C18.2892 12.3069 18.3331 12.5273 18.3331 12.7498C18.3332 12.9723 18.2893 13.1927 18.2042 13.3983C18.119 13.6039 17.9942 13.7907 17.8368 13.948C17.6794 14.1054 17.4926 14.2301 17.287 14.3152L15.8337 14.9172C15.4187 15.0888 15.0888 15.4182 14.9166 15.833L14.3142 17.2874C14.1423 17.7024 13.8125 18.0322 13.3975 18.2041C12.9825 18.376 12.5161 18.376 12.1011 18.2041L10.6478 17.6021C10.2328 17.4306 9.7666 17.431 9.35181 17.6031L7.89749 18.2046C7.48268 18.3762 7.01676 18.376 6.60206 18.2042C6.18735 18.0324 5.85779 17.7031 5.68576 17.2885L5.08318 15.8337C4.91158 15.4186 4.5822 15.0888 4.16745 14.9165L2.71313 14.3141C2.29828 14.1423 1.96863 13.8127 1.79665 13.3979C1.62467 12.9831 1.62444 12.5169 1.796 12.102L2.39797 10.6486C2.56946 10.2336 2.56911 9.76738 2.39699 9.35257L1.79589 7.89716C1.71067 7.69159 1.66678 7.47124 1.66675 7.2487C1.66671 7.02616 1.71053 6.8058 1.79568 6.6002C1.88084 6.3946 2.00568 6.2078 2.16305 6.05046C2.32043 5.89313 2.50727 5.76835 2.71289 5.68326L4.16616 5.08127C4.58081 4.90981 4.91049 4.58084 5.08283 4.16655L5.68523 2.71218C5.85715 2.29712 6.1869 1.96737 6.60193 1.79544C7.01697 1.62352 7.48331 1.62352 7.89834 1.79544L9.35162 2.39743C9.76667 2.56893 10.2328 2.56858 10.6476 2.39646L12.1026 1.79638C12.5175 1.62455 12.9838 1.62459 13.3987 1.79648C13.8137 1.96836 14.1434 2.29803 14.3153 2.71297L14.9179 4.16778L14.9177 4.16526Z" stroke="white" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
//       </g>
//       <defs>
//         <clipPath id="clip0_772_3051">
//           <rect width={width} height={height} fill="none" />
//         </clipPath>
//       </defs>
//     </svg>
//   )
// }

// export const SearchRefraction = ({ width, height, color }) => {
//   // ** State
//   return (
//     <svg width={width} height={height} viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
//       <path d="M17.5 17.5L13.875 13.875M9.16667 5C11.4679 5 13.3333 6.86548 13.3333 9.16667M15.8333 9.16667C15.8333 12.8486 12.8486 15.8333 9.16667 15.8333C5.48477 15.8333 2.5 12.8486 2.5 9.16667C2.5 5.48477 5.48477 2.5 9.16667 2.5C12.8486 2.5 15.8333 5.48477 15.8333 9.16667Z" stroke="white" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
//     </svg>
//   )
// }

export const Globel = ({ width, height, color }) => {
  // ** State
  return (
    <svg width={width} height={height} fill="none" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
      <g clipPath="url(#clip0_772_6013)">
        <path d="M12.5001 2.04801C11.7109 1.80013 10.8711 1.6665 10.0001 1.6665C5.39771 1.6665 1.66675 5.39746 1.66675 9.99984C1.66675 14.6022 5.39771 18.3332 10.0001 18.3332C14.6025 18.3332 18.3334 14.6022 18.3334 9.99984C18.3334 8.5704 17.9735 7.22502 17.3394 6.04938M14.1667 4.7915H14.1709M8.75013 18.2401L8.75022 16.4039C8.75022 16.3045 8.7858 16.2083 8.85052 16.1328L10.922 13.716C11.0922 13.5174 11.0395 13.2129 10.8124 13.0831L8.43219 11.723C8.36752 11.686 8.31394 11.6324 8.27703 11.5677L6.72546 8.84869C6.64471 8.70719 6.48889 8.62573 6.32661 8.64018L1.72023 9.05046M17.5001 4.99984C17.5001 6.84079 15.8334 8.33317 14.1667 9.99984C12.5001 8.33317 10.8334 6.84079 10.8334 4.99984C10.8334 3.15889 12.3258 1.6665 14.1667 1.6665C16.0077 1.6665 17.5001 3.15889 17.5001 4.99984ZM14.3751 4.7915C14.3751 4.90656 14.2818 4.99984 14.1667 4.99984C14.0517 4.99984 13.9584 4.90656 13.9584 4.7915C13.9584 4.67644 14.0517 4.58317 14.1667 4.58317C14.2818 4.58317 14.3751 4.67644 14.3751 4.7915Z" stroke="white" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
      </g>
      <defs>
        <clipPath id="clip0_772_6013">
          <rect width={width} height={height} fill="none" />
        </clipPath>
      </defs>
    </svg>

  )
}

export const Icongraphy = ({ width, height }) => {
  // ** State
  return (
    <svg width={width} height={height} viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
      <g filter="url(#filter0_d_865_7923)">
        <rect x="4" y="4" width="40" height="40" rx="20" fill="#C6D9F5" />
        <path d="M31.5 26.5V27.5C31.5 28.9001 31.5 29.6002 31.2275 30.135C30.9878 30.6054 30.6054 30.9878 30.135 31.2275C29.6002 31.5 28.9001 31.5 27.5 31.5H20.5C19.0999 31.5 18.3998 31.5 17.865 31.2275C17.3946 30.9878 17.0122 30.6054 16.7725 30.135C16.5 29.6002 16.5 28.9001 16.5 27.5V26.5M28.1667 20.6667L24 16.5M24 16.5L19.8333 20.6667M24 16.5V26.5" stroke="#4788C6" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
        <rect x="6" y="6" width="36" height="36" rx="18" stroke="#E0EDFF" strokeWidth="4" />
      </g>
      <defs>
        <filter id="filter0_d_865_7923" x="0" y="0" width={width} height={height} filterUnits="userSpaceOnUse" colorInterpolationFilters="sRGB">
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
          <feMorphology radius="4" operator="dilate" in="SourceAlpha" result="effect1_dropShadow_865_7923" />
          <feOffset />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0.95 0 0 0 0 0.969853 0 0 0 0 1 0 0 0 1 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_865_7923" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_865_7923" result="shape" />
        </filter>
      </defs>
    </svg>
  )
}


export const EmptyData = ({ width, height, color }) => {
  // ** State
  return (
    <svg width={width} height={height} viewBox="0 0 214 232" fill="none" xmlns="http://www.w3.org/2000/svg">
      <circle cx="100" cy="80" r="80" fill="#E5E7EB" />
      <circle cx="19.5598" cy="20" r="8" fill="#E5E7EB" />
      <circle cx="191.56" cy="126" r="6" fill="#E5E7EB" />
      <circle cx="18.5598" cy="138" r="10" fill="#E5E7EB" />
      <circle cx="203.56" cy="38" r="10" fill="#E5E7EB" />
      <circle cx="184.56" cy="11" r="7" fill="#E5E7EB" />
      <path d="M49.6379 124.214L102.089 99.7551C104.723 98.5271 105.862 95.3968 104.634 92.7633L73.6584 26.336L52.683 18.7016L9.7683 38.713C7.13484 39.941 5.99549 43.0714 7.2235 45.7048L42.6461 121.669C43.8741 124.302 47.0044 125.442 49.6379 124.214Z" fill="url(#paint0_linear_510_21675)" />
      <path d="M52.6829 18.7017L73.6582 26.3361L59.3533 33.0066L52.6829 18.7017Z" fill="#D2D6DB" />
      <path d="M74.7114 106.339H132.585C135.491 106.339 137.846 103.984 137.846 101.078V27.7837L122.063 12H74.7114C71.8057 12 69.4502 14.3555 69.4502 17.2612V101.078C69.4502 103.984 71.8057 106.339 74.7114 106.339Z" fill="url(#paint1_linear_510_21675)" />
      <path d="M122.062 12L137.846 27.7837H122.062V12Z" fill="#D2D6DB" />
      <path d="M104.471 99.724L156.922 124.182C159.556 125.41 162.686 124.271 163.914 121.638L194.889 55.2103L187.255 34.2349L144.34 14.2235C141.707 12.9955 138.577 14.1348 137.349 16.7683L101.926 92.7322C100.698 95.3657 101.837 98.496 104.471 99.724Z" fill="url(#paint2_linear_510_21675)" />
      <path d="M187.255 34.2349L194.889 55.2102L180.584 48.5398L187.255 34.2349Z" fill="#D2D6DB" />
      <path d="M5.98825 203.68C6.51625 203.68 6.96425 203.864 7.33225 204.232C7.70025 204.6 7.88425 205.04 7.88425 205.552C7.88425 206.064 7.70025 206.504 7.33225 206.872C6.96425 207.24 6.51625 207.424 5.98825 207.424C5.47625 207.424 5.03625 207.24 4.66825 206.872C4.30025 206.504 4.11625 206.064 4.11625 205.552C4.11625 205.024 4.30025 204.584 4.66825 204.232C5.03625 203.864 5.47625 203.68 5.98825 203.68ZM10.2843 203.68C10.8123 203.68 11.2603 203.864 11.6283 204.232C11.9963 204.6 12.1803 205.04 12.1803 205.552C12.1803 206.064 11.9963 206.504 11.6283 206.872C11.2603 207.24 10.8123 207.424 10.2843 207.424C9.77225 207.424 9.33225 207.24 8.96425 206.872C8.61225 206.504 8.43625 206.064 8.43625 205.552C8.43625 205.024 8.61225 204.584 8.96425 204.232C9.33225 203.864 9.77225 203.68 10.2843 203.68ZM12.1803 208.312V216.568C12.1803 216.664 12.2123 216.744 12.2762 216.808C12.3403 216.872 12.4363 216.904 12.5643 216.904H13.3802V220H11.4843C10.6683 220 9.92425 219.68 9.25225 219.04C8.46825 219.824 7.52425 220.216 6.42025 220.216H6.39625H6.34825C4.74825 220.216 3.49225 219.552 2.58025 218.224C1.84425 217.184 1.47625 215.944 1.47625 214.504C1.47625 212.744 2.03625 211.288 3.15625 210.136C4.16425 209.096 5.42025 208.576 6.92425 208.576C7.74025 208.576 8.54825 208.744 9.34825 209.08L10.3323 208.312H12.1803ZM8.46025 211.936C8.07625 211.84 7.71625 211.792 7.38025 211.792C6.67625 211.792 6.12425 212.032 5.72425 212.512C5.32425 212.992 5.12425 213.656 5.12425 214.504C5.12425 215.304 5.34025 215.96 5.77225 216.472C6.22025 216.984 6.79625 217.24 7.50025 217.24C7.77225 217.24 8.09225 217.2 8.46025 217.12V211.936ZM16.4007 209.368C18.0007 208.904 19.3847 208.672 20.5527 208.672C22.4727 208.672 24.0967 209.272 25.4247 210.472C26.6407 211.592 27.2487 212.96 27.2487 214.576V217.024C27.2487 217.84 26.9607 218.536 26.3847 219.112C25.7927 219.704 25.0807 220 24.2487 220H13.2087V216.904H23.1927C23.4167 216.904 23.5287 216.792 23.5287 216.568V214.984C23.5287 213.928 23.0727 213.104 22.1607 212.512C21.4407 212.048 20.6087 211.816 19.6647 211.816C18.7847 211.816 17.6967 211.984 16.4007 212.32V209.368ZM33.9145 202.816V216.568C33.9145 216.6 33.9225 216.648 33.9385 216.712L33.9625 216.736C34.0105 216.848 34.1065 216.904 34.2505 216.904H35.1385V220H33.1945C32.4105 220 31.7225 219.72 31.1305 219.16C30.5225 218.568 30.2185 217.856 30.2185 217.024V202.816H33.9145ZM37.1433 203.68C37.6553 203.68 38.0953 203.864 38.4633 204.232C38.8313 204.6 39.0153 205.04 39.0153 205.552C39.0153 206.064 38.8313 206.504 38.4633 206.872C38.0953 207.24 37.6553 207.424 37.1433 207.424C36.6153 207.424 36.1673 207.24 35.7993 206.872C35.4473 206.504 35.2713 206.064 35.2713 205.552C35.2713 205.024 35.4473 204.584 35.7993 204.232C36.1673 203.864 36.6153 203.68 37.1433 203.68ZM41.4393 203.68C41.9513 203.68 42.3913 203.864 42.7593 204.232C43.1273 204.6 43.3113 205.04 43.3113 205.552C43.3113 206.064 43.1273 206.504 42.7593 206.872C42.3913 207.24 41.9513 207.424 41.4393 207.424C40.9113 207.424 40.4633 207.24 40.0953 206.872C39.7433 206.504 39.5673 206.064 39.5673 205.552C39.5673 205.024 39.7433 204.584 40.0953 204.232C40.4633 203.864 40.9113 203.68 41.4393 203.68ZM42.9513 208.96V216.688C42.9513 216.752 42.9593 216.824 42.9753 216.904H44.1513V220H43.4073L42.3513 218.896H42.3033C41.6953 219.632 40.9113 220 39.9513 220H34.9352V216.904H38.7753C38.9193 216.904 39.0313 216.856 39.1113 216.76C39.2073 216.68 39.2553 216.568 39.2553 216.424V208.96H42.9513ZM48.3021 213.16C48.3021 211.8 48.7981 210.696 49.7901 209.848C50.6861 209.08 51.9181 208.696 53.4861 208.696C54.8301 208.696 55.9661 209.032 56.8941 209.704C58.2861 210.712 58.9821 212.24 58.9821 214.288C58.9821 216.128 58.5341 217.664 57.6381 218.896C56.7261 220.112 55.5181 220.72 54.0141 220.72C52.7181 220.72 51.6941 220.24 50.9421 219.28C50.3661 219.76 49.7181 220 48.9981 220H43.9821V216.904H47.9421C48.0541 216.904 48.1421 216.872 48.2061 216.808C48.2701 216.728 48.3021 216.648 48.3021 216.568V213.16ZM51.9981 216.904C52.3661 217.368 52.8381 217.6 53.4141 217.6C53.9901 217.6 54.4541 217.328 54.8061 216.784C55.1581 216.24 55.3341 215.52 55.3341 214.624C55.3341 213.664 55.1501 212.936 54.7821 212.44C54.4301 211.992 53.9501 211.768 53.3421 211.768C52.9421 211.768 52.6061 211.912 52.3341 212.2C52.1101 212.488 51.9981 212.816 51.9981 213.184V216.904ZM74.3802 208.312C74.9082 208.312 75.3482 208.496 75.7002 208.864C76.0682 209.232 76.2522 209.672 76.2522 210.184C76.2522 210.712 76.0682 211.16 75.7002 211.528C75.3482 211.88 74.9082 212.056 74.3802 212.056C73.8682 212.056 73.4282 211.88 73.0602 211.528C72.6922 211.16 72.5082 210.712 72.5082 210.184C72.5082 209.672 72.6922 209.232 73.0602 208.864C73.4282 208.496 73.8682 208.312 74.3802 208.312ZM78.6762 208.312C79.2042 208.312 79.6442 208.496 79.9962 208.864C80.3642 209.232 80.5482 209.672 80.5482 210.184C80.5482 210.712 80.3642 211.16 79.9962 211.528C79.6442 211.88 79.2042 212.056 78.6762 212.056C78.1642 212.056 77.7242 211.88 77.3562 211.528C76.9882 211.16 76.8042 210.712 76.8042 210.184C76.8042 209.672 76.9882 209.232 77.3562 208.864C77.7242 208.496 78.1642 208.312 78.6762 208.312ZM86.9082 208.96V217.024C86.9082 217.76 86.6682 218.4 86.1882 218.944C85.5962 219.648 84.8442 220 83.9322 220H70.7322C69.6122 220 68.6282 219.64 67.7802 218.92C66.6922 217.992 66.1482 216.8 66.1482 215.344V212.2L68.0202 210.688H69.8442V215.344C69.8442 215.824 70.0122 216.216 70.3482 216.52C70.6522 216.776 70.9722 216.904 71.3082 216.904H82.8522C83.0922 216.904 83.2122 216.792 83.2122 216.568V208.96H86.9082ZM93.9145 202.816V216.568C93.9145 216.6 93.9225 216.648 93.9385 216.712L93.9625 216.736C94.0105 216.848 94.1065 216.904 94.2505 216.904H95.1385V220H93.1945C92.4105 220 91.7225 219.72 91.1305 219.16C90.5225 218.568 90.2185 217.856 90.2185 217.024V202.816H93.9145ZM101.079 203.68C101.607 203.68 102.047 203.864 102.399 204.232C102.767 204.584 102.951 205.024 102.951 205.552C102.951 206.064 102.767 206.504 102.399 206.872C102.047 207.24 101.607 207.424 101.079 207.424C100.567 207.424 100.127 207.24 99.7593 206.872C99.3913 206.504 99.2073 206.064 99.2073 205.552C99.2073 205.04 99.3913 204.6 99.7593 204.232C100.127 203.864 100.567 203.68 101.079 203.68ZM102.951 208.96V217.024C102.951 217.728 102.719 218.36 102.255 218.92C101.647 219.64 100.879 220 99.9513 220H94.9352V216.904H98.8953C98.9913 216.904 99.0713 216.88 99.1353 216.832C99.2153 216.768 99.2553 216.68 99.2553 216.568V208.96H102.951ZM109.969 202.816V216.568C109.969 216.6 109.977 216.648 109.993 216.712L110.017 216.736C110.065 216.848 110.161 216.904 110.305 216.904H111.193V220H109.249C108.465 220 107.777 219.72 107.185 219.16C106.577 218.568 106.273 217.856 106.273 217.024V202.816H109.969ZM119.006 208.96V216.688C119.006 216.752 119.014 216.824 119.03 216.904H120.23V220H119.486L118.43 218.896H118.358C117.766 219.632 116.99 220 116.03 220H111.014V216.904H114.83C114.99 216.904 115.11 216.856 115.19 216.76C115.27 216.68 115.31 216.568 115.31 216.424V208.96H119.006ZM112.814 221.104C113.342 221.104 113.79 221.288 114.158 221.656C114.526 222.024 114.71 222.472 114.71 223C114.71 223.512 114.526 223.952 114.158 224.32C113.79 224.688 113.342 224.872 112.814 224.872C112.302 224.872 111.862 224.688 111.494 224.32C111.126 223.952 110.942 223.512 110.942 223C110.942 222.472 111.126 222.024 111.494 221.656C111.862 221.288 112.302 221.104 112.814 221.104ZM117.11 221.104C117.638 221.104 118.086 221.288 118.454 221.656C118.822 222.024 119.006 222.472 119.006 223C119.006 223.512 118.822 223.952 118.454 224.32C118.086 224.688 117.638 224.872 117.11 224.872C116.598 224.872 116.158 224.688 115.79 224.32C115.438 223.952 115.262 223.512 115.262 223C115.262 222.472 115.438 222.024 115.79 221.656C116.158 221.288 116.598 221.104 117.11 221.104ZM128.053 208.96V217.024C128.053 217.728 127.821 218.36 127.357 218.92C126.749 219.64 125.981 220 125.053 220H120.037V216.904H123.997C124.093 216.904 124.173 216.88 124.237 216.832C124.317 216.768 124.357 216.68 124.357 216.568V208.96H128.053ZM125.725 221.104C126.237 221.104 126.677 221.288 127.045 221.656C127.413 222.024 127.597 222.472 127.597 223C127.597 223.512 127.413 223.952 127.045 224.32C126.677 224.688 126.237 224.872 125.725 224.872C125.197 224.872 124.749 224.688 124.381 224.32C124.029 223.952 123.853 223.512 123.853 223C123.853 222.472 124.029 222.024 124.381 221.656C124.749 221.288 125.197 221.104 125.725 221.104ZM137.485 208.816C137.901 208.72 138.477 208.672 139.213 208.672C141.181 208.672 142.765 209.288 143.965 210.52C145.037 211.624 145.573 213.024 145.573 214.72V215.896C145.573 216.344 145.581 216.68 145.597 216.904H146.197V220H145.885L144.997 218.896H144.925C144.781 219.056 144.653 219.192 144.541 219.304C143.981 219.752 143.349 219.984 142.645 220H135.061V216.904H141.541C141.765 216.904 141.877 216.792 141.877 216.568V215.008C141.877 214.032 141.573 213.232 140.965 212.608C140.373 211.984 139.597 211.672 138.637 211.672C138.141 211.672 137.757 211.704 137.485 211.768V208.816ZM149.198 209.368C150.798 208.904 152.182 208.672 153.35 208.672C155.27 208.672 156.894 209.272 158.222 210.472C159.438 211.592 160.046 212.96 160.046 214.576V217.024C160.046 217.84 159.758 218.536 159.182 219.112C158.59 219.704 157.878 220 157.046 220H146.006V216.904H155.99C156.214 216.904 156.326 216.792 156.326 216.568V214.984C156.326 213.928 155.87 213.104 154.958 212.512C154.238 212.048 153.406 211.816 152.462 211.816C151.582 211.816 150.494 211.984 149.198 212.32V209.368ZM153.038 221.104C153.55 221.104 153.99 221.288 154.358 221.656C154.726 222.024 154.91 222.472 154.91 223C154.91 223.512 154.726 223.952 154.358 224.32C153.99 224.688 153.55 224.872 153.038 224.872C152.51 224.872 152.062 224.688 151.694 224.32C151.342 223.952 151.166 223.512 151.166 223C151.166 222.472 151.342 222.024 151.694 221.656C152.062 221.288 152.51 221.104 153.038 221.104ZM168.127 220C166.431 220 165.063 219.4 164.023 218.2C163.127 217.176 162.679 215.952 162.679 214.528C162.679 212.72 163.151 211.328 164.095 210.352C165.199 209.232 166.607 208.672 168.319 208.672C169.551 208.672 170.591 208.952 171.439 209.512C172.719 210.36 173.359 211.576 173.359 213.16V216.904H174.127V220H173.335C173.143 221.76 172.439 223.136 171.223 224.128C170.487 224.752 169.575 225.2 168.487 225.472C167.751 225.664 166.975 225.76 166.159 225.76C165.807 225.76 165.439 225.736 165.055 225.688L163.447 223.72V222.424C164.183 222.584 164.887 222.664 165.559 222.664C167.799 222.664 169.127 221.776 169.543 220H168.127ZM169.663 213.184C169.663 212.688 169.479 212.304 169.111 212.032C168.871 211.856 168.599 211.768 168.295 211.768C167.703 211.768 167.223 212 166.855 212.464C166.503 212.912 166.327 213.512 166.327 214.264C166.327 216.024 167.199 216.904 168.943 216.904H169.663V213.184ZM176.175 203.68C176.687 203.68 177.127 203.864 177.495 204.232C177.863 204.6 178.047 205.04 178.047 205.552C178.047 206.064 177.863 206.504 177.495 206.872C177.127 207.24 176.687 207.424 176.175 207.424C175.647 207.424 175.199 207.24 174.831 206.872C174.479 206.504 174.303 206.064 174.303 205.552C174.303 205.024 174.479 204.584 174.831 204.232C175.199 203.864 175.647 203.68 176.175 203.68ZM180.471 203.68C180.983 203.68 181.423 203.864 181.791 204.232C182.159 204.6 182.343 205.04 182.343 205.552C182.343 206.064 182.159 206.504 181.791 206.872C181.423 207.24 180.983 207.424 180.471 207.424C179.943 207.424 179.495 207.24 179.127 206.872C178.775 206.504 178.599 206.064 178.599 205.552C178.599 205.024 178.775 204.584 179.127 204.232C179.495 203.864 179.943 203.68 180.471 203.68ZM181.983 208.96V217.024C181.983 217.728 181.751 218.36 181.287 218.92C180.679 219.64 179.911 220 178.983 220H173.966V216.904H177.927C178.023 216.904 178.103 216.88 178.167 216.832C178.247 216.768 178.287 216.68 178.287 216.568V208.96H181.983ZM198.184 202.816V217.024C198.184 217.808 197.912 218.488 197.368 219.064C196.792 219.688 196.072 220 195.208 220H186.352L184.84 218.128V216.904H190.12L186.328 205.768H189.712L193.504 216.904H194.152C194.248 216.904 194.336 216.864 194.416 216.784C194.464 216.736 194.488 216.664 194.488 216.568V202.816H198.184Z" fill="#1F2733" />
      <defs>
        <linearGradient id="paint0_linear_510_21675" x1="46.5563" y1="124.418" x2="4.7568" y2="49.0087" gradientUnits="userSpaceOnUse">
          <stop stopColor="#D2D6DB" />
          <stop offset="1" stopColor="#F9FAFB" />
        </linearGradient>
        <linearGradient id="paint1_linear_510_21675" x1="71.8321" y1="105.223" x2="65.8183" y2="19.2131" gradientUnits="userSpaceOnUse">
          <stop stopColor="#D2D6DB" />
          <stop offset="1" stopColor="#F9FAFB" />
        </linearGradient>
        <linearGradient id="paint2_linear_510_21675" x1="102.333" y1="97.4951" x2="133.232" y2="17.0024" gradientUnits="userSpaceOnUse">
          <stop stopColor="#D2D6DB" />
          <stop offset="1" stopColor="#F9FAFB" />
        </linearGradient>
      </defs>
    </svg>


  )
}

export const CloseIcon = ({ width, height, color }) => {
  // ** State
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width={width} height={height} viewBox="0 0 24 24" fill="none">
      <path d="M17 7L7 17M7 7L17 17" stroke={color} strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
    </svg>
  )
}

export const DocIcon = ({ width, height, color }) => {
  // ** State
  return (
    <svg width={width} height={height}  viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
      <rect width={width} height={height}  rx="20" fill={color} />
      <rect width="24" height="24" transform="translate(8 8)" fill={color} />
      <path d="M22 10.2695V14.4001C22 14.9601 22 15.2401 22.109 15.4541C22.2049 15.6422 22.3578 15.7952 22.546 15.8911C22.7599 16.0001 23.0399 16.0001 23.6 16.0001H27.7305M22 25H16M24 21H16M28 17.9882V25.2C28 26.8802 28 27.7202 27.673 28.362C27.3854 28.9265 26.9265 29.3854 26.362 29.673C25.7202 30 24.8802 30 23.2 30H16.8C15.1198 30 14.2798 30 13.638 29.673C13.0735 29.3854 12.6146 28.9265 12.327 28.362C12 27.7202 12 26.8802 12 25.2V14.8C12 13.1198 12 12.2798 12.327 11.638C12.6146 11.0735 13.0735 10.6146 13.638 10.327C14.2798 10 15.1198 10 16.8 10H20.0118C20.7455 10 21.1124 10 21.4577 10.0829C21.7638 10.1564 22.0564 10.2776 22.3249 10.4421C22.6276 10.6276 22.887 10.887 23.4059 11.4059L26.5941 14.5941C27.113 15.113 27.3724 15.3724 27.5579 15.6751C27.7224 15.9436 27.8436 16.2362 27.9171 16.5423C28 16.8876 28 17.2545 28 17.9882Z" stroke="#4788C6" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
    </svg>

  )
}

export const Settings = ({ width, height, color }) => {
  // ** State
  return (
    <svg width={width} height={height} viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <g clipPath="url(#clip0_772_3275)">
        <path d="M10.0001 12.4998C11.3808 12.4998 12.5001 11.3805 12.5001 9.99984C12.5001 8.61913 11.3808 7.49984 10.0001 7.49984C8.61937 7.49984 7.50008 8.61913 7.50008 9.99984C7.50008 11.3805 8.61937 12.4998 10.0001 12.4998Z" stroke={color} strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
        <path d="M15.6061 12.2726C15.5053 12.5011 15.4752 12.7545 15.5198 13.0003C15.5643 13.246 15.6815 13.4728 15.8561 13.6514L15.9016 13.6968C16.0425 13.8375 16.1542 14.0046 16.2305 14.1886C16.3067 14.3725 16.346 14.5697 16.346 14.7688C16.346 14.9679 16.3067 15.1651 16.2305 15.349C16.1542 15.5329 16.0425 15.7 15.9016 15.8407C15.7609 15.9816 15.5938 16.0934 15.4098 16.1696C15.2259 16.2459 15.0287 16.2851 14.8296 16.2851C14.6305 16.2851 14.4334 16.2459 14.2494 16.1696C14.0655 16.0934 13.8984 15.9816 13.7577 15.8407L13.7122 15.7953C13.5337 15.6206 13.3069 15.5035 13.0611 15.4589C12.8154 15.4144 12.5619 15.4444 12.3334 15.5453C12.1093 15.6413 11.9183 15.8008 11.7836 16.004C11.649 16.2073 11.5768 16.4455 11.5758 16.6892V16.818C11.5758 17.2199 11.4162 17.6052 11.1321 17.8894C10.8479 18.1735 10.4625 18.3332 10.0607 18.3332C9.65884 18.3332 9.27346 18.1735 8.98931 17.8894C8.70517 17.6052 8.54554 17.2199 8.54554 16.818V16.7498C8.53967 16.4991 8.45851 16.2559 8.31259 16.0519C8.16667 15.8479 7.96276 15.6925 7.72735 15.6059C7.49886 15.5051 7.24539 15.475 6.99964 15.5195C6.75388 15.5641 6.52711 15.6812 6.34857 15.8559L6.30311 15.9014C6.1624 16.0422 5.99529 16.154 5.81135 16.2302C5.62742 16.3065 5.43026 16.3457 5.23114 16.3457C5.03203 16.3457 4.83487 16.3065 4.65093 16.2302C4.46699 16.154 4.29989 16.0422 4.15917 15.9014C4.0183 15.7606 3.90654 15.5935 3.83029 15.4096C3.75405 15.2257 3.7148 15.0285 3.7148 14.8294C3.7148 14.6303 3.75405 14.4331 3.83029 14.2492C3.90654 14.0652 4.0183 13.8981 4.15917 13.7574L4.20463 13.712C4.37928 13.5334 4.49643 13.3066 4.54099 13.0609C4.58555 12.8151 4.55547 12.5617 4.45463 12.3332C4.35859 12.1091 4.19914 11.918 3.99589 11.7834C3.79264 11.6488 3.55447 11.5766 3.31069 11.5756H3.1819C2.78006 11.5756 2.39467 11.416 2.11053 11.1318C1.82638 10.8477 1.66675 10.4623 1.66675 10.0604C1.66675 9.6586 1.82638 9.27322 2.11053 8.98907C2.39467 8.70492 2.78006 8.54529 3.1819 8.54529H3.25008C3.50083 8.53943 3.74402 8.45826 3.94804 8.31235C4.15205 8.16643 4.30744 7.96252 4.39402 7.72711C4.49487 7.49861 4.52495 7.24515 4.48039 6.99939C4.43583 6.75364 4.31867 6.52687 4.14402 6.34832L4.09857 6.30287C3.95769 6.16215 3.84594 5.99505 3.76969 5.81111C3.69344 5.62717 3.65419 5.43001 3.65419 5.2309C3.65419 5.03178 3.69344 4.83462 3.76969 4.65069C3.84594 4.46675 3.95769 4.29965 4.09857 4.15893C4.23928 4.01805 4.40639 3.9063 4.59032 3.83005C4.77426 3.7538 4.97142 3.71455 5.17054 3.71455C5.36965 3.71455 5.56681 3.7538 5.75075 3.83005C5.93469 3.9063 6.10179 4.01805 6.24251 4.15893L6.28796 4.20438C6.46651 4.37903 6.69328 4.49619 6.93903 4.54075C7.18478 4.58531 7.43825 4.55523 7.66675 4.45438H7.72735C7.95142 4.35835 8.14252 4.19889 8.27712 3.99564C8.41172 3.79239 8.48396 3.55422 8.48493 3.31044V3.18166C8.48493 2.77981 8.64456 2.39443 8.92871 2.11028C9.21285 1.82614 9.59824 1.6665 10.0001 1.6665C10.4019 1.6665 10.7873 1.82614 11.0715 2.11028C11.3556 2.39443 11.5152 2.77981 11.5152 3.18166V3.24984C11.5162 3.49362 11.5884 3.73179 11.723 3.93504C11.8576 4.13829 12.0487 4.29774 12.2728 4.39378C12.5013 4.49462 12.7548 4.5247 13.0005 4.48014C13.2463 4.43558 13.4731 4.31843 13.6516 4.14378L13.6971 4.09832C13.8378 3.95745 14.0049 3.84569 14.1888 3.76944C14.3727 3.69319 14.5699 3.65395 14.769 3.65395C14.9681 3.65395 15.1653 3.69319 15.3492 3.76944C15.5332 3.84569 15.7003 3.95745 15.841 4.09832C15.9819 4.23904 16.0936 4.40614 16.1699 4.59008C16.2461 4.77402 16.2854 4.97118 16.2854 5.17029C16.2854 5.36941 16.2461 5.56657 16.1699 5.7505C16.0936 5.93444 15.9819 6.10154 15.841 6.24226L15.7955 6.28772C15.6209 6.46626 15.5037 6.69303 15.4592 6.93879C15.4146 7.18454 15.4447 7.43801 15.5455 7.6665V7.72711C15.6416 7.95118 15.801 8.14228 16.0043 8.27688C16.2075 8.41148 16.4457 8.48371 16.6895 8.48469H16.8183C17.2201 8.48469 17.6055 8.64432 17.8896 8.92846C18.1738 9.21261 18.3334 9.59799 18.3334 9.99984C18.3334 10.4017 18.1738 10.7871 17.8896 11.0712C17.6055 11.3554 17.2201 11.515 16.8183 11.515H16.7501C16.5063 11.516 16.2681 11.5882 16.0649 11.7228C15.8616 11.8574 15.7022 12.0485 15.6061 12.2726Z" stroke={color} strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
      </g>
      <defs>
        <clipPath id="clip0_772_3275">
          <rect width={width} height={height} fill="none" />
        </clipPath>
      </defs>
    </svg>


  )
}

export const Download = ({ width, height, color }) => {
  // ** State
  return (
    <svg width={width} height={height} fill="none" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
      <path d="M17.5 12.5V13.5C17.5 14.9001 17.5 15.6002 17.2275 16.135C16.9878 16.6054 16.6054 16.9878 16.135 17.2275C15.6002 17.5 14.9001 17.5 13.5 17.5H6.5C5.09987 17.5 4.3998 17.5 3.86502 17.2275C3.39462 16.9878 3.01217 16.6054 2.77248 16.135C2.5 15.6002 2.5 14.9001 2.5 13.5V12.5M14.1667 8.33333L10 12.5M10 12.5L5.83333 8.33333M10 12.5V2.5" stroke={color} strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
    </svg>
  )
}

export const Share = ({ width, height, color }) => {
  // ** State
  return (
    <svg width={width} height={height} fill="none" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
      <path d="M17.5 5H14.8333C13.4332 5 12.7331 5 12.1984 5.27248C11.728 5.51217 11.3455 5.89462 11.1058 6.36502C10.8333 6.8998 10.8333 7.59987 10.8333 9V10M17.5 5L15 2.5M17.5 5L15 7.5M8.33333 2.5H6.5C5.09987 2.5 4.3998 2.5 3.86502 2.77248C3.39462 3.01217 3.01217 3.39462 2.77248 3.86502C2.5 4.3998 2.5 5.09987 2.5 6.5V13.5C2.5 14.9001 2.5 15.6002 2.77248 16.135C3.01217 16.6054 3.39462 16.9878 3.86502 17.2275C4.3998 17.5 5.09987 17.5 6.5 17.5H13.5C14.9001 17.5 15.6002 17.5 16.135 17.2275C16.6054 16.9878 16.9878 16.6054 17.2275 16.135C17.5 15.6002 17.5 14.9001 17.5 13.5V11.6667" stroke={color} strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
    </svg>
  )
}

export const Logo = ({ width, height, color }) => {
  // ** State
  return (
<svg width={width} height={height} viewBox="0 0 160 32" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M99.6443 27.2593H159.373L141.57 10.6667L129.509 22.5186L116.874 10.6667L99.6443 27.2593Z" fill="#29428E"/>
<path d="M99.6443 29.6297H159.373L141.57 13.0371L129.509 24.889L116.874 13.0371L99.6443 29.6297Z" fill="#3261A8"/>
<path d="M99.6443 32.0001H159.373L141.57 15.4075L129.509 27.2593L116.874 15.4075L99.6443 32.0001Z" fill="#4788C6"/>
<path d="M119.171 10.0741L129.509 20.1481L138.698 10.6667H129.509V8.2963H138.698L129.509 0L119.171 10.0741Z" fill="#E41F28"/>
<path d="M1.70836 12.6257V14.6396C1.70836 15.5572 1.92774 16.1996 2.36651 16.5666C2.8146 16.9433 3.5801 17.1317 4.663 17.1317C5.60586 17.1317 6.28734 17.0061 6.70743 16.755C7.22088 16.4555 7.51494 15.9195 7.58962 15.1467H6.72144L5.99328 14.2194V13.6689H9.85811V15.1467H9.32599C9.25131 16.3541 8.78454 17.2621 7.92569 17.8706C7.25355 18.3632 6.39937 18.6095 5.36315 18.6095H3.97685C2.8006 18.6095 1.8624 18.2956 1.16225 17.6678C0.387416 17.0109 0 16.0547 0 14.799V13.3356L0.868185 12.6257H1.70836ZM3.55676 19.4499C3.80881 19.4499 4.02353 19.5417 4.2009 19.7252C4.37827 19.9087 4.46695 20.1309 4.46695 20.3917C4.46695 20.6525 4.37827 20.8746 4.2009 21.0582C4.02353 21.2417 3.80881 21.3334 3.55676 21.3334C3.30471 21.3334 3.08999 21.2417 2.91262 21.0582C2.73525 20.8746 2.64657 20.6525 2.64657 20.3917C2.64657 20.1309 2.73525 19.9087 2.91262 19.7252C3.08999 19.5417 3.30471 19.4499 3.55676 19.4499ZM5.68521 19.4499C5.93727 19.4499 6.15198 19.5417 6.32935 19.7252C6.50672 19.9087 6.59541 20.1309 6.59541 20.3917C6.59541 20.6525 6.50672 20.8746 6.32935 21.0582C6.15198 21.2417 5.93727 21.3334 5.68521 21.3334C5.4425 21.3334 5.23245 21.2417 5.05508 21.0582C4.87771 20.8746 4.78902 20.6525 4.78902 20.3917C4.78902 20.1309 4.87771 19.9087 5.05508 19.7252C5.23245 19.5417 5.4425 19.4499 5.68521 19.4499Z" fill="#4788C6"/>
<path d="M11.2367 13.6689V15.1467H8.64619V13.6689H11.2367Z" fill="#4788C6"/>
<path d="M13.7256 13.6689V15.1467H11.135V13.6689H13.7256Z" fill="#4788C6"/>
<path d="M16.2144 13.6689V15.1467H13.6238V13.6689H16.2144Z" fill="#4788C6"/>
<path d="M19.4733 5.29432C19.7254 5.29432 19.9401 5.38608 20.1175 5.56961C20.2949 5.75313 20.3835 5.9753 20.3835 6.2361C20.3835 6.48723 20.2949 6.70457 20.1175 6.88809C19.9401 7.07162 19.7254 7.16338 19.4733 7.16338C19.2306 7.16338 19.0206 7.07162 18.8432 6.88809C18.6658 6.70457 18.5772 6.48723 18.5772 6.2361C18.5772 5.9753 18.6658 5.75313 18.8432 5.56961C19.0206 5.38608 19.2306 5.29432 19.4733 5.29432ZM20.3275 8.48186V13.5529C20.3275 13.9297 20.2062 14.2774 19.9634 14.5961C19.6554 14.9632 19.2726 15.1467 18.8152 15.1467H16.1126V13.6689H18.2691C18.3718 13.6689 18.4605 13.6302 18.5351 13.5529C18.6005 13.4853 18.6332 13.4032 18.6332 13.3066V8.48186H20.3275Z" fill="#4788C6"/>
<path d="M23.9709 4.77272V13.3066C23.9709 13.4032 23.9989 13.4805 24.0549 13.5385C24.111 13.6254 24.1996 13.6689 24.321 13.6689H24.6851V15.1467H23.7749C23.3921 15.1467 23.0561 15.0067 22.7667 14.7265C22.4306 14.4078 22.2626 14.0166 22.2626 13.5529V4.77272H23.9709Z" fill="#4788C6"/>
<path d="M27.1816 13.6689V15.1467H24.591V13.6689H27.1816Z" fill="#4788C6"/>
<path d="M29.6704 13.6689V15.1467H27.0798V13.6689H29.6704Z" fill="#4788C6"/>
<path d="M32.1592 13.6689V15.1467H29.5686V13.6689H32.1592Z" fill="#4788C6"/>
<path d="M34.564 10.9884C34.564 10.0708 34.872 9.37534 35.4882 8.90204C35.9736 8.51567 36.6364 8.32248 37.4766 8.32248C38.2981 8.32248 38.9936 8.57362 39.563 9.0759C40.2819 9.71341 40.6413 10.6165 40.6413 11.7853C40.6413 12.8865 40.3565 13.7993 39.7871 14.5237C39.2363 15.2288 38.5222 15.5814 37.6446 15.5814C36.8698 15.5814 36.2583 15.2819 35.8102 14.6831C35.5115 14.9922 35.1474 15.1467 34.718 15.1467H32.0434V13.6689H34.1999C34.3026 13.6689 34.3913 13.6302 34.466 13.5529C34.5313 13.4853 34.564 13.4032 34.564 13.3066V10.9884ZM36.2583 13.5095C36.6037 13.8959 37.0005 14.089 37.4486 14.089C37.8873 14.089 38.2468 13.891 38.5268 13.495C38.8069 13.0893 38.9469 12.5677 38.9469 11.9302C38.9469 11.2347 38.7929 10.689 38.4848 10.293C38.2048 9.95489 37.8407 9.78586 37.3926 9.78586C37.0565 9.78586 36.7904 9.89694 36.5944 10.1191C36.3704 10.3316 36.2583 10.6214 36.2583 10.9884V13.5095Z" fill="#4788C6"/>
<path d="M47.6686 5.29432C47.9206 5.29432 48.1353 5.38608 48.3127 5.56961C48.4901 5.75313 48.5788 5.9753 48.5788 6.2361C48.5788 6.48723 48.4901 6.70457 48.3127 6.88809C48.1353 7.07162 47.9206 7.16338 47.6686 7.16338C47.4165 7.16338 47.2018 7.07162 47.0244 6.88809C46.8471 6.70457 46.7584 6.48723 46.7584 6.2361C46.7584 5.9753 46.8471 5.75313 47.0244 5.56961C47.2018 5.38608 47.4165 5.29432 47.6686 5.29432ZM49.797 5.29432C50.0491 5.29432 50.2638 5.38608 50.4412 5.56961C50.6185 5.75313 50.7072 5.9753 50.7072 6.2361C50.7072 6.48723 50.6185 6.70457 50.4412 6.88809C50.2638 7.07162 50.0491 7.16338 49.797 7.16338C49.5543 7.16338 49.3443 7.07162 49.1669 6.88809C48.9895 6.70457 48.9008 6.48723 48.9008 6.2361C48.9008 5.9753 48.9895 5.75313 49.1669 5.56961C49.3443 5.38608 49.5543 5.29432 49.797 5.29432ZM50.7072 8.09066V13.3066C50.7072 13.4225 50.7399 13.5095 50.8053 13.5674C50.8613 13.6351 50.9359 13.6689 51.0293 13.6689H51.4214V15.1467H50.5392C50.1098 15.1467 49.7224 14.968 49.3769 14.6106C48.8448 15.0646 48.252 15.2916 47.5986 15.2916C46.8611 15.2916 46.2263 15.0501 45.6942 14.5672C44.9847 13.8814 44.6299 12.9637 44.6299 11.8143C44.6299 10.7614 44.9567 9.88728 45.6101 9.19181C46.2076 8.56397 46.9404 8.25004 47.8086 8.25004C48.294 8.25004 48.7795 8.35629 49.2649 8.56879L49.8671 8.09066H50.7072ZM48.9989 9.95972C48.6721 9.83415 48.3594 9.77137 48.0607 9.77137C47.5566 9.77137 47.1411 9.96455 46.8144 10.3509C46.4877 10.7276 46.3243 11.2202 46.3243 11.8288C46.3243 12.4373 46.469 12.9251 46.7584 13.2921C47.0571 13.6592 47.4539 13.8427 47.9486 13.8427C48.2847 13.8427 48.6348 13.7655 48.9989 13.6109V9.95972Z" fill="#4788C6"/>
<path d="M53.9158 13.6689V15.1467H51.3252V13.6689H53.9158Z" fill="#4788C6"/>
<path d="M56.4046 13.6689V15.1467H53.814V13.6689H56.4046Z" fill="#4788C6"/>
<path d="M58.8934 13.6689V15.1467H56.3028V13.6689H58.8934Z" fill="#4788C6"/>
<path d="M65.4571 4.56988V6.20712L62.5305 8.0472C63.7347 8.50118 64.7009 9.24494 65.4291 10.2785C66.0826 11.2251 66.4093 12.2586 66.4093 13.3791C66.4093 13.9007 66.2646 14.3257 65.9752 14.6541C65.6951 14.9825 65.3311 15.1467 64.883 15.1467H58.7777V13.6689H64.3368C64.5796 13.6689 64.7009 13.5433 64.7009 13.2921C64.6262 12.3842 64.3042 11.5921 63.7347 10.916C62.9692 9.97904 61.919 9.43812 60.584 9.29324C60.5187 9.29324 60.486 9.2546 60.486 9.17732V7.5256L65.4571 4.56988Z" fill="#4788C6"/>
<path d="M71.4333 8.48186V13.6689H72.1474V15.1467H71.4193C71.3446 16.3058 70.9012 17.1945 70.089 17.8127C69.4169 18.3246 68.5907 18.5806 67.6105 18.5806C67.4424 18.5806 67.2604 18.5757 67.0644 18.5661L66.3782 17.6823V17.0592C66.6769 17.1075 66.9663 17.1317 67.2464 17.1317C68.8988 17.1317 69.7249 16.301 69.7249 14.6396V8.48186H71.4333Z" fill="#4788C6"/>
<path d="M74.6468 13.6689V15.1467H72.0562V13.6689H74.6468Z" fill="#4788C6"/>
<path d="M77.1356 13.6689V15.1467H74.545V13.6689H77.1356Z" fill="#4788C6"/>
<path d="M86.3738 3.55566C86.6072 3.55566 86.8033 3.6426 86.962 3.81646C87.13 3.98067 87.214 4.18351 87.214 4.42499C87.214 4.66647 87.13 4.86932 86.962 5.03352C86.8033 5.19773 86.6072 5.27983 86.3738 5.27983C86.1404 5.27983 85.9444 5.19773 85.7857 5.03352C85.627 4.86932 85.5477 4.66647 85.5477 4.42499C85.5477 4.18351 85.627 3.98067 85.7857 3.81646C85.9444 3.6426 86.1404 3.55566 86.3738 3.55566ZM85.3096 5.29432C85.5617 5.29432 85.7764 5.38608 85.9537 5.56961C86.1311 5.75313 86.2198 5.9753 86.2198 6.2361C86.2198 6.48723 86.1311 6.70457 85.9537 6.88809C85.7764 7.07162 85.5617 7.16338 85.3096 7.16338C85.0669 7.16338 84.8568 7.07162 84.6795 6.88809C84.5021 6.70457 84.4134 6.48723 84.4134 6.2361C84.4134 5.9753 84.5021 5.75313 84.6795 5.56961C84.8568 5.38608 85.0669 5.29432 85.3096 5.29432ZM87.4381 5.29432C87.6901 5.29432 87.9048 5.38608 88.0822 5.56961C88.2596 5.75313 88.3483 5.9753 88.3483 6.2361C88.3483 6.48723 88.2596 6.70457 88.0822 6.88809C87.9048 7.07162 87.6901 7.16338 87.4381 7.16338C87.186 7.16338 86.9713 7.07162 86.7939 6.88809C86.6165 6.70457 86.5279 6.48723 86.5279 6.2361C86.5279 5.9753 86.6165 5.75313 86.7939 5.56961C86.9713 5.38608 87.186 5.29432 87.4381 5.29432ZM91.891 8.48186V13.5529C91.891 13.9876 91.7416 14.3643 91.4429 14.6831C91.1535 14.9922 90.7988 15.1467 90.3787 15.1467H87.4381L86.9199 14.5527H86.8779C86.5699 14.9487 86.1778 15.1467 85.7017 15.1467H82.7611L82.2289 14.5527H82.1869C81.8789 14.9487 81.4868 15.1467 81.0107 15.1467H77.0338V13.6689H80.4646C80.6979 13.6689 80.8146 13.5481 80.8146 13.3066V10.1481H82.523V13.0458C82.523 13.326 82.5183 13.5336 82.509 13.6689H85.1556C85.389 13.6689 85.5056 13.5481 85.5056 13.3066V9.30772H87.214V13.1762C87.214 13.2342 87.2093 13.3211 87.2 13.437C87.2 13.5433 87.2 13.6206 87.2 13.6689H89.8326C90.066 13.6689 90.1826 13.5481 90.1826 13.3066V8.48186H91.891Z" fill="#4788C6"/>
<path d="M1.74819 25.6149V31.8765H0V23.8275H2.61633L4.16235 30.2352L5.6489 23.8275H8.28902V31.8765H6.54083V25.6149L5.0305 31.8765H3.28231L1.74819 25.6149Z" fill="#4788C6"/>
<path d="M14.9934 30.2577H11.8062L11.2354 31.8765H9.45151L12.4722 23.8275H14.4106L17.36 31.8765H15.5523L14.9934 30.2577ZM14.5177 28.875L13.4117 25.7273L12.2938 28.875H14.5177Z" fill="#4788C6"/>
<path d="M23.639 31.8765L20.214 26.3119V31.8765H18.4658V23.8275H20.2615L23.639 29.3022V23.8275H25.3872V31.8765H23.639Z" fill="#4788C6"/>
<path d="M28.8778 23.8275V31.8765H27.1296V23.8275H28.8778Z" fill="#4788C6"/>
<path d="M39.8728 26.5143H38.2079C37.9779 25.585 37.3714 25.1203 36.3883 25.1203C35.651 25.1203 35.0841 25.3976 34.6877 25.9522C34.3468 26.4393 34.1763 27.0876 34.1763 27.897C34.1763 28.8113 34.3904 29.5083 34.8185 29.9879C35.1911 30.4001 35.6946 30.6062 36.3289 30.6062C36.8759 30.6062 37.312 30.4713 37.637 30.2015C37.9621 29.9317 38.1524 29.5457 38.2079 29.0436H39.9085C39.853 30.0179 39.4566 30.7711 38.7192 31.3032C38.085 31.7678 37.2723 32.0002 36.2813 32.0002C35.0128 32.0002 34.0297 31.5805 33.332 30.7411C32.7294 30.0141 32.4281 29.0549 32.4281 27.8632C32.4281 26.4993 32.8246 25.4426 33.6174 24.6931C34.3071 24.0336 35.207 23.7039 36.317 23.7039C37.6331 23.7039 38.6281 24.1198 39.302 24.9517C39.6349 25.3639 39.8252 25.8847 39.8728 26.5143Z" fill="#4788C6"/>
<path d="M44.9388 23.7039C46.1439 23.7039 47.1111 24.0673 47.8405 24.7943C48.6334 25.5812 49.0298 26.6004 49.0298 27.852C49.0298 29.0886 48.6334 30.1078 47.8405 30.9097C47.1191 31.6367 46.1518 32.0002 44.9388 32.0002C43.7178 32.0002 42.7466 31.6367 42.0251 30.9097C41.2323 30.1078 40.8359 29.0886 40.8359 27.852C40.8359 26.6154 41.2323 25.5962 42.0251 24.7943C42.7545 24.0673 43.7258 23.7039 44.9388 23.7039ZM44.9388 25.1203C44.1777 25.1203 43.5791 25.4013 43.143 25.9634C42.7704 26.4506 42.5841 27.0801 42.5841 27.852C42.5841 28.7363 42.8259 29.4296 43.3095 29.9317C43.7297 30.3664 44.2728 30.5837 44.9388 30.5837C45.6999 30.5837 46.2945 30.3027 46.7226 29.7406C47.0953 29.2535 47.2816 28.6239 47.2816 27.852C47.2816 26.9677 47.0398 26.2744 46.5562 25.7723C46.136 25.3376 45.5968 25.1203 44.9388 25.1203Z" fill="#4788C6"/>
<path d="M52.1168 25.6149V31.8765H50.3686V23.8275H52.9849L54.531 30.2352L56.0175 23.8275H58.6576V31.8765H56.9094V25.6149L55.3991 31.8765H53.6509L52.1168 25.6149Z" fill="#4788C6"/>
<path d="M62.151 29.0099V31.8765H60.4028V23.8275H64.1609C65.1122 23.8275 65.8218 24.0711 66.2896 24.5582C66.7019 24.9854 66.908 25.5737 66.908 26.3231C66.908 27.2 66.6464 27.882 66.1231 28.3691C65.6633 28.7963 65.0686 29.0099 64.3392 29.0099H62.151ZM62.151 27.6272H63.7803C64.7 27.6272 65.1598 27.2262 65.1598 26.4243C65.1598 25.6149 64.7 25.2102 63.7803 25.2102H62.151V27.6272Z" fill="#4788C6"/>
<path d="M73.1664 30.2577H69.9792L69.4084 31.8765H67.6245L70.6452 23.8275H72.5837L75.533 31.8765H73.7253L73.1664 30.2577ZM72.6907 28.875L71.5847 25.7273L70.4668 28.875H72.6907Z" fill="#4788C6"/>
<path d="M81.812 31.8765L78.387 26.3119V31.8765H76.6388V23.8275H78.4345L81.812 29.3022V23.8275H83.5602V31.8765H81.812Z" fill="#4788C6"/>
<path d="M89.2033 28.8975V31.8765H87.4551V28.8975L84.6247 23.8275H86.5751L88.3114 27.3799L89.9407 23.8275H91.891L89.2033 28.8975Z" fill="#4788C6"/>
</svg>
)
}
export const Close = ({ width, height, color }) => {
  // ** State
  return (
<svg width={width} height={height} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M17 7L7 17M7 7L17 17" stroke="#4D5761" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</svg>
)
}

export const Direction = ({ width, height, color }) => {
  // ** State
  return (
<svg width={width} height={height} viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="40" height="40" rx="20" fill="#F2F7FF"/>
<path d="M24 25L29 20M29 20L24 15M29 20H17M17 11H15.8C14.1198 11 13.2798 11 12.638 11.327C12.0735 11.6146 11.6146 12.0735 11.327 12.638C11 13.2798 11 14.1198 11 15.8V24.2C11 25.8802 11 26.7202 11.327 27.362C11.6146 27.9265 12.0735 28.3854 12.638 28.673C13.2798 29 14.1198 29 15.8 29H17" stroke="#4788C6" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</svg>
)
}

export const Notification = ({ width, height, color }) => {
  // ** State
  return (
<svg width={width} height={height} viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="40" height="40" rx="20" fill="#F2F7FF"/>
<path d="M22.9997 27C22.9997 28.6569 21.6566 30 19.9997 30C18.3429 30 16.9997 28.6569 16.9997 27M21.7962 14.2386C22.2317 13.7886 22.4997 13.1756 22.4997 12.5C22.4997 11.1193 21.3804 10 19.9997 10C18.619 10 17.4997 11.1193 17.4997 12.5C17.4997 13.1756 17.7677 13.7886 18.2032 14.2386M25.9997 19.2C25.9997 17.8209 25.3676 16.4982 24.2424 15.523C23.1171 14.5479 21.591 14 19.9997 14C18.4084 14 16.8823 14.5479 15.7571 15.523C14.6319 16.4982 13.9997 17.8209 13.9997 19.2C13.9997 21.4818 13.4339 23.1506 12.7278 24.3447C11.9231 25.7056 11.5207 26.3861 11.5366 26.5486C11.5548 26.7346 11.5882 26.7933 11.7391 26.9036C11.8709 27 12.5332 27 13.8579 27H26.1415C27.4662 27 28.1286 27 28.2604 26.9036C28.4112 26.7933 28.4447 26.7346 28.4629 26.5486C28.4787 26.3861 28.0764 25.7056 27.2717 24.3447C26.5656 23.1506 25.9997 21.4818 25.9997 19.2Z" stroke="#4788C6" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</svg>
)
}
export const IconCar = ({ width, height, color }) => {
  // ** State
  return (
<svg width={width} height={height} viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="48" height="48" rx="24" fill="#4788C6"/>
<path d="M32.7611 21.6504C32.7477 21.635 32.7362 21.62 32.7203 21.605L32.0194 20.9333C32.6007 20.8024 33.2265 20.3188 33.2265 19.8227C33.2265 19.2446 32.4186 19.0395 31.7292 19.0395C31.0083 19.0395 30.9246 19.53 30.9161 19.8766L29.1078 18.1453C28.7404 17.7842 28.0436 17.5 27.5227 17.5H24.0008H24H20.4773C19.9568 17.5 19.2604 17.7842 18.8926 18.1453L17.0847 19.8766C17.0754 19.53 16.9917 19.0395 16.2716 19.0395C15.5814 19.0395 14.7739 19.2446 14.7739 19.8227C14.7739 20.3188 15.4001 20.8024 15.9814 20.9333L15.2805 21.605C15.2646 21.62 15.2536 21.635 15.2397 21.6504C14.4898 22.2868 14 23.4672 14 24.3237V26.8689C14 27.4866 14.2453 28.0472 14.6417 28.4651V29.4522C14.6417 30.0294 15.1283 30.5 15.7267 30.5H17.0386C17.637 30.5 18.1232 30.0302 18.1232 29.4522V29.1996H24H24.0008H29.8772V29.4522C29.8772 30.0302 30.363 30.5 30.9622 30.5H32.2737C32.8726 30.5 33.3583 30.0294 33.3583 29.4522V28.4651C33.7551 28.0472 34 27.4866 34 26.8689V24.3237C34.0008 23.4672 33.511 22.2868 32.7611 21.6504ZM19.5568 18.9147C19.8111 18.7043 20.2556 18.5446 20.4773 18.5446H24H24.0008H27.5236C27.7452 18.5446 28.1897 18.7043 28.444 18.9147L30.8153 21.1968H24.0008H24H17.186L19.5568 18.9147ZM14.8135 23.9386C14.8135 23.3119 15.3075 22.8032 15.9173 22.8032C16.5267 22.8032 18.5183 23.9641 18.5183 24.5908C18.5183 25.2175 16.5267 25.0724 15.9173 25.0724C15.3075 25.0724 14.8135 24.5657 14.8135 23.9386ZM18.1236 28.0837H17.9134H17.7032L16.4561 28.0857C16.11 27.9787 15.8659 27.8539 15.6932 27.7197C15.6058 27.652 15.5389 27.5815 15.4867 27.5113C15.434 27.4404 15.3956 27.3707 15.3707 27.301C15.2156 26.8656 15.536 26.4655 15.536 26.4655H17.6644L19.0833 28.0829L18.1236 28.0837ZM27.0607 28.0845H24.0008H24H20.9402C20.3021 28.0845 19.7841 27.5701 19.7841 26.937H24H24.0008H28.2167C28.2167 27.5709 27.6987 28.0845 27.0607 28.0845ZM27.3293 26.1538H24.0008H24H20.6716C19.9776 26.1538 19.4143 25.3042 19.4143 24.2564H24H24.0008H28.5865C28.5865 25.3046 28.0232 26.1538 27.3293 26.1538ZM32.6305 27.3018C32.6052 27.3715 32.5668 27.4412 32.5142 27.5118C32.4623 27.5819 32.3954 27.6524 32.3076 27.7201C32.1354 27.8543 31.8908 27.9799 31.5447 28.0861L30.2977 28.0841H30.0874H29.8772H28.9167L30.3364 26.4668H32.4644C32.4644 26.4664 32.7852 26.8656 32.6305 27.3018ZM32.0835 25.0724C31.4745 25.0724 29.4829 25.2167 29.4829 24.5908C29.4829 23.9649 31.4745 22.8032 32.0835 22.8032C32.6934 22.8032 33.1873 23.3119 33.1873 23.9386C33.1873 24.5649 32.6934 25.0724 32.0835 25.0724Z" fill="white"/>
</svg>
)
}

export const CarsIcon = ({ width, height, color, classes }) => {
  // ** State
  return (
    <svg className={classes} width={width} height={height} viewBox="0 0 97 96" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g filter="url(#filter0_dd_701_3707)">
    <rect x="20.6001" width="56" height="56" rx="28" fill="#F3F4F6"/>
    <path d="M60.2817 24.8673C60.2637 24.8468 60.2485 24.8268 60.2273 24.8068L59.2928 23.9113C60.0678 23.7367 60.9021 23.0919 60.9021 22.4304C60.9021 21.6597 59.825 21.3862 58.9058 21.3862C57.9446 21.3862 57.833 22.0402 57.8216 22.5023L55.4105 20.1939C54.9207 19.7124 53.9916 19.3335 53.2972 19.3335H48.6013H48.6002H43.9032C43.2093 19.3335 42.2808 19.7124 41.7904 20.1939L39.3798 22.5023C39.3673 22.0402 39.2557 21.3862 38.2957 21.3862C37.3753 21.3862 36.2988 21.6597 36.2988 22.4304C36.2988 23.0919 37.1337 23.7367 37.9087 23.9113L36.9742 24.8068C36.953 24.8268 36.9383 24.8468 36.9198 24.8673C35.92 25.7159 35.2668 27.2897 35.2668 28.4317V31.8253C35.2668 32.649 35.5939 33.3965 36.1224 33.9537V35.2697C36.1224 36.0393 36.7712 36.6668 37.5691 36.6668H39.3183C40.1162 36.6668 40.7644 36.0404 40.7644 35.2697V34.933H48.6002H48.6013H56.4365V35.2697C56.4365 36.0404 57.0841 36.6668 57.8831 36.6668H59.6318C60.4303 36.6668 61.0779 36.0393 61.0779 35.2697V33.9537C61.607 33.3965 61.9335 32.649 61.9335 31.8253V28.4317C61.9346 27.2897 61.2815 25.7159 60.2817 24.8673ZM42.6759 21.2197C43.015 20.9392 43.6077 20.7263 43.9032 20.7263H48.6002H48.6013H53.2983C53.5938 20.7263 54.1865 20.9392 54.5256 21.2197L57.6872 24.2626H48.6013H48.6002H39.5148L42.6759 21.2197ZM36.3516 27.9183C36.3516 27.0827 37.0101 26.4044 37.8232 26.4044C38.6358 26.4044 41.2913 27.9523 41.2913 28.7879C41.2913 29.6235 38.6358 29.43 37.8232 29.43C37.0101 29.43 36.3516 28.7544 36.3516 27.9183ZM40.765 33.4451H40.4847H40.2044L38.5417 33.4478C38.0801 33.3051 37.7547 33.1387 37.5244 32.9598C37.408 32.8695 37.3187 32.7755 37.249 32.682C37.1788 32.5874 37.1277 32.4944 37.0945 32.4015C36.8877 31.821 37.3149 31.2876 37.3149 31.2876H40.1527L42.0445 33.444L40.765 33.4451ZM52.6811 33.4462H48.6013H48.6002H44.5204C43.6697 33.4462 42.979 32.7603 42.979 31.9161H48.6002H48.6013H54.2224C54.2224 32.7614 53.5317 33.4462 52.6811 33.4462ZM53.0392 30.8719H48.6013H48.6002H44.1623C43.237 30.8719 42.4859 29.7391 42.4859 28.342H48.6002H48.6013H54.7155C54.7155 29.7397 53.9644 30.8719 53.0392 30.8719ZM60.1075 32.4025C60.0738 32.4955 60.0226 32.5885 59.9524 32.6825C59.8833 32.776 59.794 32.87 59.677 32.9603C59.4473 33.1392 59.1213 33.3067 58.6598 33.4483L56.9971 33.4456H56.7168H56.4365H55.1558L57.0488 31.2892H59.886C59.886 31.2886 60.3138 31.821 60.1075 32.4025ZM59.3782 29.43C58.5662 29.43 55.9107 29.6224 55.9107 28.7879C55.9107 27.9534 58.5662 26.4044 59.3782 26.4044C60.1913 26.4044 60.8499 27.0827 60.8499 27.9183C60.8499 28.7533 60.1913 29.43 59.3782 29.43Z" fill="#1F2733"/>
    </g>
    <defs>
    <filter id="filter0_dd_701_3707" x="0.600098" y="0" width="96" height="96" filterUnits="userSpaceOnUse" colorInterpolationFilters="sRGB">
    <feFlood floodOpacity="0" result="BackgroundImageFix"/>
    <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
    <feMorphology radius="4" operator="erode" in="SourceAlpha" result="effect1_dropShadow_701_3707"/>
    <feOffset dy="8"/>
    <feGaussianBlur stdDeviation="4"/>
    <feColorMatrix type="matrix" values="0 0 0 0 0.0627451 0 0 0 0 0.0941176 0 0 0 0 0.156863 0 0 0 0.03 0"/>
    <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_701_3707"/>
    <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
    <feMorphology radius="4" operator="erode" in="SourceAlpha" result="effect2_dropShadow_701_3707"/>
    <feOffset dy="20"/>
    <feGaussianBlur stdDeviation="12"/>
    <feColorMatrix type="matrix" values="0 0 0 0 0.300235 0 0 0 0 0.339812 0 0 0 0 0.382118 0 0 0 0.08 0"/>
    <feBlend mode="normal" in2="effect1_dropShadow_701_3707" result="effect2_dropShadow_701_3707"/>
    <feBlend mode="normal" in="SourceGraphic" in2="effect2_dropShadow_701_3707" result="shape"/>
    </filter>
    </defs>
    </svg>
)
}

export const GlassIcon = ({ width, height, color, classes }) => {
  // ** State
  return (
<svg className={classes} width={width} height={height} viewBox="0 0 97 96" fill="none" xmlns="http://www.w3.org/2000/svg">
<g filter="url(#filter0_dd_782_3693)">
<rect x="20.2" width="56" height="56" rx="28" fill="#FFF7F0"/>
<rect width="32" height="32" transform="translate(32.2 12)" fill="#FFF7F0"/>
<path d="M60.2 40L54.4 34.2M46.8666 20C50.5485 20 53.5333 22.9848 53.5333 26.6667M57.5333 26.6667C57.5333 32.5577 52.7577 37.3333 46.8666 37.3333C40.9756 37.3333 36.2 32.5577 36.2 26.6667C36.2 20.7756 40.9756 16 46.8666 16C52.7577 16 57.5333 20.7756 57.5333 26.6667Z" stroke="#CC6610" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</g>
<defs>
<filter id="filter0_dd_782_3693" x="0.199951" y="0" width="96" height="96" filterUnits="userSpaceOnUse" colorInterpolationFilters="sRGB">
<feFlood floodOpacity="0" result="BackgroundImageFix"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feMorphology radius="4" operator="erode" in="SourceAlpha" result="effect1_dropShadow_782_3693"/>
<feOffset dy="8"/>
<feGaussianBlur stdDeviation="4"/>
<feColorMatrix type="matrix" values="0 0 0 0 0.0627451 0 0 0 0 0.0941176 0 0 0 0 0.156863 0 0 0 0.03 0"/>
<feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_782_3693"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feMorphology radius="4" operator="erode" in="SourceAlpha" result="effect2_dropShadow_782_3693"/>
<feOffset dy="20"/>
<feGaussianBlur stdDeviation="12"/>
<feColorMatrix type="matrix" values="0 0 0 0 0.2 0 0 0 0 0.1 0 0 0 0 0.0156863 0 0 0 0.08 0"/>
<feBlend mode="normal" in2="effect1_dropShadow_782_3693" result="effect2_dropShadow_782_3693"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect2_dropShadow_782_3693" result="shape"/>
</filter>
</defs>
</svg>

)
}
export const ExecCarsIcon = ({ width, height, color, classes }) => {
  // ** State
  // className={classes} width={width} height={height}
  return (
<svg className={classes} width={width} height={height} viewBox="0 0 97 96" fill="none" xmlns="http://www.w3.org/2000/svg">
<g filter="url(#filter0_dd_782_4674)">
<rect x="20.8" width="56" height="56" rx="28" fill="#F2F7FF"/>
<rect width="32" height="32" transform="translate(32.8 12)" fill="#F2F7FF"/>
<path d="M48.8 15V18.3333M48.8 36V41.3333M40.4667 28H35.8M61.1334 28H59.1334M57.4095 36.6095L56.4667 35.6667M57.6857 19.221L55.8 21.1067M39.3621 37.4379L43.1334 33.6667M39.6383 18.9449L42.4667 21.7733" stroke="#4788C6" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</g>
<defs>
<filter id="filter0_dd_782_4674" x="0.800049" y="0" width="96" height="96" filterUnits="userSpaceOnUse" colorInterpolationFilters="sRGB">
<feFlood floodOpacity="0" result="BackgroundImageFix"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feMorphology radius="4" operator="erode" in="SourceAlpha" result="effect1_dropShadow_782_4674"/>
<feOffset dy="8"/>
<feGaussianBlur stdDeviation="4"/>
<feColorMatrix type="matrix" values="0 0 0 0 0.0627451 0 0 0 0 0.0941176 0 0 0 0 0.156863 0 0 0 0.03 0"/>
<feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_782_4674"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feMorphology radius="4" operator="erode" in="SourceAlpha" result="effect2_dropShadow_782_4674"/>
<feOffset dy="20"/>
<feGaussianBlur stdDeviation="12"/>
<feColorMatrix type="matrix" values="0 0 0 0 0.278431 0 0 0 0 0.533333 0 0 0 0 0.776471 0 0 0 0.08 0"/>
<feBlend mode="normal" in2="effect1_dropShadow_782_4674" result="effect2_dropShadow_782_4674"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect2_dropShadow_782_4674" result="shape"/>
</filter>
</defs>
</svg>
)
}
export const PulledCarsIcon = ({ width, height, color, classes }) => {
  // ** State
  // className={classes} width={width} height={height}
  return (
<svg className={classes} width={width} height={height} viewBox="0 0 97 96" fill="none" xmlns="http://www.w3.org/2000/svg">
<g filter="url(#filter0_dd_782_4667)">
<rect x="20.4" width="56" height="56" rx="28" fill="#FFE0E6"/>
<path d="M52.4 15.2769C51.1373 14.8803 49.7936 14.6665 48.4 14.6665C41.0362 14.6665 35.0667 20.636 35.0667 27.9998C35.0667 35.3636 41.0362 41.3332 48.4 41.3332C55.7638 41.3332 61.7333 35.3636 61.7333 27.9998C61.7333 25.7127 61.1575 23.5601 60.1429 21.6791M55.0667 19.6665H55.0733M46.4001 41.1842L46.4002 38.2464C46.4002 38.0873 46.4571 37.9334 46.5607 37.8126L49.8751 33.9457C50.1474 33.6279 50.063 33.1407 49.6997 32.933L45.8914 30.7568C45.7879 30.6977 45.7022 30.6119 45.6431 30.5084L43.1606 26.158C43.0314 25.9316 42.7821 25.8013 42.5224 25.8244L35.1522 26.4808M60.4 19.9998C60.4 22.9454 57.7333 25.3332 55.0667 27.9998C52.4 25.3332 49.7333 22.9454 49.7333 19.9998C49.7333 17.0543 52.1211 14.6665 55.0667 14.6665C58.0122 14.6665 60.4 17.0543 60.4 19.9998ZM55.4 19.6665C55.4 19.8506 55.2507 19.9998 55.0667 19.9998C54.8826 19.9998 54.7333 19.8506 54.7333 19.6665C54.7333 19.4824 54.8826 19.3332 55.0667 19.3332C55.2507 19.3332 55.4 19.4824 55.4 19.6665Z" stroke="#A6223D" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</g>
<defs>
<filter id="filter0_dd_782_4667" x="0.400024" y="0" width="96" height="96" filterUnits="userSpaceOnUse" colorInterpolationFilters="sRGB">
<feFlood floodOpacity="0" result="BackgroundImageFix"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feMorphology radius="4" operator="erode" in="SourceAlpha" result="effect1_dropShadow_782_4667"/>
<feOffset dy="8"/>
<feGaussianBlur stdDeviation="4"/>
<feColorMatrix type="matrix" values="0 0 0 0 0.0627451 0 0 0 0 0.0941176 0 0 0 0 0.156863 0 0 0 0.03 0"/>
<feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_782_4667"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feMorphology radius="4" operator="erode" in="SourceAlpha" result="effect2_dropShadow_782_4667"/>
<feOffset dy="20"/>
<feGaussianBlur stdDeviation="12"/>
<feColorMatrix type="matrix" values="0 0 0 0 0.65 0 0 0 0 0.132203 0 0 0 0 0.238701 0 0 0 0.08 0"/>
<feBlend mode="normal" in2="effect1_dropShadow_782_4667" result="effect2_dropShadow_782_4667"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect2_dropShadow_782_4667" result="shape"/>
</filter>
</defs>
</svg>

)
}
export const RestoredCarsIcon = ({ width, height, color, classes }) => {
  // ** State
  // className={classes} width={width} height={height}
  return (
    <svg className={classes} width={width} height={height} viewBox="0 0 96 96" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g filter="url(#filter0_dd_782_3674)">
    <rect x="20" width="56" height="56" rx="28" fill="#E6FFF1"/>
    <path d="M44 27.9998L46.6666 30.6665L52.6666 24.6665M55.8682 18.6645C56.1428 19.3285 56.6698 19.8564 57.3334 20.1319L59.6603 21.0958C60.3243 21.3709 60.8519 21.8985 61.127 22.5626C61.4021 23.2267 61.4021 23.9728 61.127 24.6369L60.1638 26.9622C59.8887 27.6266 59.8883 28.3735 60.1647 29.0376L61.1262 31.3622C61.2626 31.6911 61.3328 32.0437 61.3328 32.3998C61.3329 32.7558 61.2628 33.1084 61.1265 33.4374C60.9903 33.7663 60.7905 34.0652 60.5387 34.3169C60.2869 34.5687 59.988 34.7683 59.659 34.9045L57.3338 35.8677C56.6698 36.1422 56.142 36.6693 55.8664 37.3329L54.9026 39.6599C54.6275 40.324 54.0999 40.8516 53.4358 41.1266C52.7718 41.4017 52.0256 41.4017 51.3616 41.1266L49.0363 40.1635C48.3723 39.8891 47.6264 39.8896 46.9627 40.165L44.6358 41.1275C43.9721 41.4019 43.2266 41.4017 42.5631 41.1269C41.8996 40.852 41.3723 40.325 41.097 39.6616L40.1329 37.334C39.8584 36.6699 39.3314 36.1421 38.6678 35.8665L36.3408 34.9027C35.6771 34.6277 35.1496 34.1004 34.8745 33.4367C34.5993 32.773 34.5989 32.0272 34.8734 31.3632L35.8366 29.0379C36.111 28.3738 36.1104 27.6279 35.835 26.9642L34.8733 24.6355C34.7369 24.3066 34.6667 23.9541 34.6666 23.598C34.6666 23.242 34.7367 22.8894 34.8729 22.5604C35.0092 22.2315 35.2089 21.9326 35.4607 21.6808C35.7125 21.4291 36.0115 21.2295 36.3404 21.0933L38.6657 20.1301C39.3291 19.8558 39.8566 19.3294 40.1324 18.6666L41.0962 16.3396C41.3713 15.6755 41.8989 15.1479 42.5629 14.8728C43.227 14.5977 43.9731 14.5977 44.6372 14.8728L46.9624 15.836C47.6265 16.1104 48.3724 16.1098 49.036 15.8344L51.3639 14.8743C52.0279 14.5994 52.7739 14.5994 53.4378 14.8745C54.1017 15.1495 54.6293 15.6769 54.9044 16.3409L55.8685 18.6685L55.8682 18.6645Z" stroke="#05603A" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
    </g>
    <defs>
    <filter id="filter0_dd_782_3674" x="0" y="0" width="96" height="96" filterUnits="userSpaceOnUse" colorInterpolationFilters="sRGB">
    <feFlood floodOpacity="0" result="BackgroundImageFix"/>
    <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
    <feMorphology radius="4" operator="erode" in="SourceAlpha" result="effect1_dropShadow_782_3674"/>
    <feOffset dy="8"/>
    <feGaussianBlur stdDeviation="4"/>
    <feColorMatrix type="matrix" values="0 0 0 0 0.0627451 0 0 0 0 0.0941176 0 0 0 0 0.156863 0 0 0 0.03 0"/>
    <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_782_3674"/>
    <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
    <feMorphology radius="4" operator="erode" in="SourceAlpha" result="effect2_dropShadow_782_3674"/>
    <feOffset dy="20"/>
    <feGaussianBlur stdDeviation="12"/>
    <feColorMatrix type="matrix" values="0 0 0 0 0.0198039 0 0 0 0 0.376274 0 0 0 0 0.227745 0 0 0 0.08 0"/>
    <feBlend mode="normal" in2="effect1_dropShadow_782_3674" result="effect2_dropShadow_782_3674"/>
    <feBlend mode="normal" in="SourceGraphic" in2="effect2_dropShadow_782_3674" result="shape"/>
    </filter>
    </defs>
    </svg>

)
}

export const EmpIcon = ({ width, height, color }) => {
  // ** State
  // className={classes} width={width} height={height}
  return (
<svg  width={width} height={height} viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="40" height="40" rx="20" fill="#4788C6"/>
<rect width="24" height="24" transform="translate(8 8)" fill="#4788C6"/>
<path d="M28 29C28 27.6044 28 26.9066 27.8278 26.3389C27.44 25.0604 26.4395 24.06 25.1611 23.6722C24.5933 23.5 23.8956 23.5 22.5 23.5H17.5C16.1044 23.5 15.4067 23.5 14.8389 23.6722C13.5605 24.06 12.56 25.0604 12.1722 26.3389C12 26.9066 12 27.6044 12 29M24.5 15.5C24.5 17.9853 22.4853 20 20 20C17.5147 20 15.5 17.9853 15.5 15.5C15.5 13.0147 17.5147 11 20 11C22.4853 11 24.5 13.0147 24.5 15.5Z" stroke="white" strokeWidth="2.33333" strokeLinecap="round" strokeLinejoin="round"/>
</svg>


)
}

export const EmpIcon2 = ({ width, height, color }) => {
  // ** State
  // className={classes} width={width} height={height}
  return (
<svg width={width} height={height} viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="40" height="40" rx="20" fill="#FFCCD7"/>
<rect width="24" height="24" transform="translate(8 8)" fill="#FFCCD7"/>
<path d="M23 10.4578C22.053 10.1604 21.0452 10 20 10C14.4772 10 10 14.4772 10 20C10 25.5228 14.4772 30 20 30C25.5228 30 30 25.5228 30 20C30 18.2847 29.5681 16.6702 28.8071 15.2594M25 13.75H25.005M18.5001 29.8883L18.5002 27.6849C18.5002 27.5656 18.5429 27.4502 18.6205 27.3596L21.1063 24.4594C21.3106 24.2211 21.2473 23.8556 20.9748 23.6999L18.1185 22.0677C18.0409 22.0234 17.9766 21.9591 17.9323 21.8814L16.0705 18.6186C15.9736 18.4488 15.7866 18.3511 15.5918 18.3684L10.0642 18.8607M29 14C29 16.2091 27 18 25 20C23 18 21 16.2091 21 14C21 11.7909 22.7909 10 25 10C27.2091 10 29 11.7909 29 14ZM25.25 13.75C25.25 13.8881 25.1381 14 25 14C24.8619 14 24.75 13.8881 24.75 13.75C24.75 13.6119 24.8619 13.5 25 13.5C25.1381 13.5 25.25 13.6119 25.25 13.75Z" stroke="#A6223D" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</svg>


)
}

export const EmpIcon3 = ({ width, height, color }) => {
  // ** State
  // className={classes} width={width} height={height}
  return (
<svg width={width} height={height} viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="40" height="40" rx="20" fill="#ECFDF3"/>
<rect width="24" height="24" transform="translate(8 8)" fill="#ECFDF3"/>
<path d="M17 20L19 22L23.5 17.5M25.9012 12.9985C26.1071 13.4965 26.5024 13.8924 27.0001 14.0991L28.7452 14.822C29.2433 15.0283 29.639 15.424 29.8453 15.9221C30.0516 16.4201 30.0516 16.9797 29.8453 17.4778L29.1229 19.2218C28.9165 19.7201 28.9162 20.2803 29.1236 20.7783L29.8447 22.5218C29.9469 22.7685 29.9996 23.0329 29.9996 23.2999C29.9997 23.567 29.9471 23.8314 29.8449 24.0781C29.7427 24.3249 29.5929 24.549 29.4041 24.7378C29.2152 24.9266 28.991 25.0764 28.7443 25.1785L27.0004 25.9009C26.5023 26.1068 26.1065 26.5021 25.8998 26.9998L25.1769 28.745C24.9706 29.2431 24.575 29.6388 24.0769 29.8451C23.5789 30.0514 23.0193 30.0514 22.5212 29.8451L20.7773 29.1227C20.2792 28.9169 19.7198 28.9173 19.2221 29.1239L17.4769 29.8458C16.9791 30.0516 16.42 30.0514 15.9224 29.8453C15.4247 29.6391 15.0293 29.2439 14.8228 28.7464L14.0997 27.0006C13.8938 26.5026 13.4985 26.1067 13.0008 25.9L11.2557 25.1771C10.7578 24.9709 10.3623 24.5754 10.1559 24.0777C9.94951 23.5799 9.94923 23.0205 10.1551 22.5225L10.8775 20.7786C11.0833 20.2805 11.0828 19.7211 10.8763 19.2233L10.155 17.4768C10.0527 17.2301 10 16.9657 10 16.6986C9.99996 16.4316 10.0525 16.1672 10.1547 15.9204C10.2569 15.6737 10.4067 15.4496 10.5956 15.2608C10.7844 15.072 11.0086 14.9222 11.2554 14.8201L12.9993 14.0977C13.4969 13.892 13.8925 13.4972 14.0993 13.0001L14.8222 11.2548C15.0285 10.7567 15.4242 10.361 15.9222 10.1547C16.4203 9.94842 16.9799 9.94842 17.4779 10.1547L19.2218 10.8771C19.7199 11.0829 20.2793 11.0825 20.7771 10.8759L22.523 10.1558C23.021 9.94966 23.5804 9.9497 24.0784 10.156C24.5763 10.3622 24.972 10.7578 25.1783 11.2558L25.9014 13.0015L25.9012 12.9985Z" stroke="#05603A" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</svg>

)
}

export const DocIcon1 = ({ width, height, color }) => {
  // ** State
  // className={classes} width={width} height={height}
  return (
<svg width={width} height={height} viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="40" height="40" rx="20" fill="#F2F7FF"/>
<rect width="24" height="24" transform="translate(8 8)" fill="#F2F7FF"/>
<path d="M22 10.2695V14.4001C22 14.9601 22 15.2401 22.109 15.4541C22.2049 15.6422 22.3578 15.7952 22.546 15.8911C22.7599 16.0001 23.0399 16.0001 23.6 16.0001H27.7305M22 25H16M24 21H16M28 17.9882V25.2C28 26.8802 28 27.7202 27.673 28.362C27.3854 28.9265 26.9265 29.3854 26.362 29.673C25.7202 30 24.8802 30 23.2 30H16.8C15.1198 30 14.2798 30 13.638 29.673C13.0735 29.3854 12.6146 28.9265 12.327 28.362C12 27.7202 12 26.8802 12 25.2V14.8C12 13.1198 12 12.2798 12.327 11.638C12.6146 11.0735 13.0735 10.6146 13.638 10.327C14.2798 10 15.1198 10 16.8 10H20.0118C20.7455 10 21.1124 10 21.4577 10.0829C21.7638 10.1564 22.0564 10.2776 22.3249 10.4421C22.6276 10.6276 22.887 10.887 23.4059 11.4059L26.5941 14.5941C27.113 15.113 27.3724 15.3724 27.5579 15.6751C27.7224 15.9436 27.8436 16.2362 27.9171 16.5423C28 16.8876 28 17.2545 28 17.9882Z" stroke="#4788C6" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</svg>
)
}
export const DocIcon2 = ({ width, height, color }) => {
  // ** State
  // className={classes} width={width} height={height}
  return (
<svg width={width} height={height} viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="40" height="40" rx="20" fill="#FFE0E6"/>
<rect width="24" height="24" transform="translate(8 8)" fill="#FFE0E6"/>
<path d="M22 10.2695V14.4001C22 14.9601 22 15.2401 22.109 15.4541C22.2049 15.6422 22.3578 15.7952 22.546 15.8911C22.7599 16.0001 23.0399 16.0001 23.6 16.0001H27.7305M22 25H16M24 21H16M28 17.9882V25.2C28 26.8802 28 27.7202 27.673 28.362C27.3854 28.9265 26.9265 29.3854 26.362 29.673C25.7202 30 24.8802 30 23.2 30H16.8C15.1198 30 14.2798 30 13.638 29.673C13.0735 29.3854 12.6146 28.9265 12.327 28.362C12 27.7202 12 26.8802 12 25.2V14.8C12 13.1198 12 12.2798 12.327 11.638C12.6146 11.0735 13.0735 10.6146 13.638 10.327C14.2798 10 15.1198 10 16.8 10H20.0118C20.7455 10 21.1124 10 21.4577 10.0829C21.7638 10.1564 22.0564 10.2776 22.3249 10.4421C22.6276 10.6276 22.887 10.887 23.4059 11.4059L26.5941 14.5941C27.113 15.113 27.3724 15.3724 27.5579 15.6751C27.7224 15.9436 27.8436 16.2362 27.9171 16.5423C28 16.8876 28 17.2545 28 17.9882Z" stroke="#A6223D" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</svg>

)
}
export const DocIcon3 = ({ width, height, color }) => {
  // ** State
  // className={classes} width={width} height={height}
  return (
<svg width={width} height={height} viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="40" height="40" rx="20" fill="#E6FFF1"/>
<rect width="24" height="24" transform="translate(8 8)" fill="#E6FFF1"/>
<path d="M22 10.2695V14.4001C22 14.9601 22 15.2401 22.109 15.4541C22.2049 15.6422 22.3578 15.7952 22.546 15.8911C22.7599 16.0001 23.0399 16.0001 23.6 16.0001H27.7305M22 25H16M24 21H16M28 17.9882V25.2C28 26.8802 28 27.7202 27.673 28.362C27.3854 28.9265 26.9265 29.3854 26.362 29.673C25.7202 30 24.8802 30 23.2 30H16.8C15.1198 30 14.2798 30 13.638 29.673C13.0735 29.3854 12.6146 28.9265 12.327 28.362C12 27.7202 12 26.8802 12 25.2V14.8C12 13.1198 12 12.2798 12.327 11.638C12.6146 11.0735 13.0735 10.6146 13.638 10.327C14.2798 10 15.1198 10 16.8 10H20.0118C20.7455 10 21.1124 10 21.4577 10.0829C21.7638 10.1564 22.0564 10.2776 22.3249 10.4421C22.6276 10.6276 22.887 10.887 23.4059 11.4059L26.5941 14.5941C27.113 15.113 27.3724 15.3724 27.5579 15.6751C27.7224 15.9436 27.8436 16.2362 27.9171 16.5423C28 16.8876 28 17.2545 28 17.9882Z" stroke="#05603A" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</svg>

)
}
export const UserIcon = ({ width, height, classes, color }) => {
  // ** State
  // className={classes} width={width} height={height}
  return (
<svg className={classes} width={width} height={height}  viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M16.6667 17.4998C16.6667 16.3368 16.6667 15.7553 16.5232 15.2821C16.2 14.2168 15.3663 13.3831 14.301 13.06C13.8278 12.9164 13.2463 12.9164 12.0834 12.9164H7.91671C6.75374 12.9164 6.17225 12.9164 5.69909 13.06C4.63375 13.3831 3.80007 14.2168 3.47691 15.2821C3.33337 15.7553 3.33337 16.3368 3.33337 17.4998M13.75 6.24976C13.75 8.32082 12.0711 9.99976 10 9.99976C7.92897 9.99976 6.25004 8.32082 6.25004 6.24976C6.25004 4.17869 7.92897 2.49976 10 2.49976C12.0711 2.49976 13.75 4.17869 13.75 6.24976Z" stroke={color} strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</svg>


)
}
export const CarIcon = ({ width, height, classes, color }) => {
  // ** State
  // className={classes} width={width} height={height}
  return (
<svg className={classes} width={width} height={height} viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M17.8009 8.04191C17.7897 8.02907 17.7801 8.01657 17.7669 8.00407L17.1828 7.44435C17.6672 7.33525 18.1887 6.93226 18.1887 6.5188C18.1887 6.03711 17.5155 5.86619 16.941 5.86619C16.3402 5.86619 16.2705 6.27492 16.2634 6.56373L14.7564 5.12102C14.4503 4.82004 13.8696 4.58325 13.4356 4.58325H10.5006H10.5H7.56435C7.13064 4.58325 6.55032 4.82004 6.24383 5.12102L4.73724 6.56373C4.72942 6.27492 4.65969 5.86619 4.05964 5.86619C3.48442 5.86619 2.81158 6.03711 2.81158 6.5188C2.81158 6.93226 3.33339 7.33525 3.81778 7.44435L3.23372 8.00407C3.22045 8.01657 3.21127 8.02907 3.1997 8.04191C2.57482 8.57224 2.16663 9.55589 2.16663 10.2696V12.3906C2.16663 12.9054 2.37106 13.3726 2.70136 13.7209V14.5434C2.70136 15.0244 3.10684 15.4166 3.60552 15.4166H4.69881C5.19749 15.4166 5.60262 15.0251 5.60262 14.5434V14.3329H10.5H10.5006H15.3976V14.5434C15.3976 15.0251 15.8024 15.4166 16.3018 15.4166H17.3947C17.8938 15.4166 18.2986 15.0244 18.2986 14.5434V13.7209C18.6292 13.3726 18.8333 12.9054 18.8333 12.3906V10.2696C18.834 9.55589 18.4258 8.57224 17.8009 8.04191ZM6.79728 5.76215C7.0092 5.58683 7.37964 5.45374 7.56435 5.45374H10.5H10.5006H13.4363C13.621 5.45374 13.9914 5.58683 14.2033 5.76215L16.1793 7.66392H10.5006H10.5H4.8216L6.79728 5.76215ZM2.84457 9.94874C2.84457 9.42652 3.25617 9.00259 3.76438 9.00259C4.27224 9.00259 5.9319 9.97002 5.9319 10.4923C5.9319 11.0145 4.27224 10.8935 3.76438 10.8935C3.25617 10.8935 2.84457 10.4713 2.84457 9.94874ZM5.60296 13.403H5.42778H5.25259L4.21339 13.4047C3.92493 13.3155 3.72151 13.2115 3.57763 13.0997C3.50483 13.0433 3.44904 12.9845 3.4055 12.926C3.36162 12.8669 3.32965 12.8088 3.3089 12.7507C3.17963 12.3879 3.44666 12.0545 3.44666 12.0545H5.22028L6.40269 13.4023L5.60296 13.403ZM13.0505 13.4037H10.5006H10.5H7.95009C7.41842 13.4037 6.98675 12.975 6.98675 12.4474H10.5H10.5006H14.0139C14.0139 12.9757 13.5822 13.4037 13.0505 13.4037ZM13.2743 11.7948H10.5006H10.5H7.72626C7.14798 11.7948 6.67856 11.0868 6.67856 10.2136H10.5H10.5006H14.322C14.322 11.0871 13.8526 11.7948 13.2743 11.7948ZM17.692 12.7514C17.671 12.8095 17.639 12.8676 17.5951 12.9264C17.5519 12.9848 17.4961 13.0436 17.423 13.1C17.2794 13.2118 17.0757 13.3165 16.7872 13.405L15.748 13.4033H15.5728H15.3976H14.5972L15.7803 12.0556H17.5536C17.5536 12.0552 17.821 12.3879 17.692 12.7514ZM17.2362 10.8935C16.7287 10.8935 15.069 11.0138 15.069 10.4923C15.069 9.9707 16.7287 9.00259 17.2362 9.00259C17.7444 9.00259 18.156 9.42652 18.156 9.94874C18.156 10.4706 17.7444 10.8935 17.2362 10.8935Z" fill="#4788C6"/>
</svg>


)
}
export const DocumentIcon = ({ width, height, classes, color }) => {
  // ** State
  // className={classes} width={width} height={height}
  return (
<svg className={classes} width={width} height={height} viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="48" height="48" rx="24" fill="#F3F4F6"/>
<path d="M26 14.2695V18.4001C26 18.9601 26 19.2401 26.109 19.4541C26.2049 19.6422 26.3578 19.7952 26.546 19.8911C26.7599 20.0001 27.0399 20.0001 27.6 20.0001H31.7305M26 29H20M28 25H20M32 21.9882V29.2C32 30.8802 32 31.7202 31.673 32.362C31.3854 32.9265 30.9265 33.3854 30.362 33.673C29.7202 34 28.8802 34 27.2 34H20.8C19.1198 34 18.2798 34 17.638 33.673C17.0735 33.3854 16.6146 32.9265 16.327 32.362C16 31.7202 16 30.8802 16 29.2V18.8C16 17.1198 16 16.2798 16.327 15.638C16.6146 15.0735 17.0735 14.6146 17.638 14.327C18.2798 14 19.1198 14 20.8 14H24.0118C24.7455 14 25.1124 14 25.4577 14.0829C25.7638 14.1564 26.0564 14.2776 26.3249 14.4421C26.6276 14.6276 26.887 14.887 27.4059 15.4059L30.5941 18.5941C31.113 19.113 31.3724 19.3724 31.5579 19.6751C31.7224 19.9436 31.8436 20.2362 31.9171 20.5423C32 20.8876 32 21.2545 32 21.9882Z" stroke={color} strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</svg>

)
}
export const IconLoad = ({ width, height, classes, color }) => {
  // ** State
  // className={classes} width={width} height={height}
  return (
<svg className={classes} width={width} height={height} viewBox="0 0 19 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M10 1.875V3.95833M10 15V18.3333M4.79167 10H1.875M17.7083 10H16.4583M15.3809 15.3809L14.7917 14.7917M15.5535 4.51316L14.375 5.69167M4.10131 15.8987L6.45833 13.5417M4.2739 4.34057L6.04167 6.10833" stroke="white" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</svg>


)
}
export const SearchRefraction = ({ width, height, classes, color }) => {
  // ** State
  // className={classes} width={width} height={height}
  return (
<svg className={classes} width={width} height={height}  viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M18 17.5L14.375 13.875M9.66667 5C11.9679 5 13.8333 6.86548 13.8333 9.16667M16.3333 9.16667C16.3333 12.8486 13.3486 15.8333 9.66667 15.8333C5.98477 15.8333 3 12.8486 3 9.16667C3 5.48477 5.98477 2.5 9.66667 2.5C13.3486 2.5 16.3333 5.48477 16.3333 9.16667Z" stroke="white" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</svg>

)
}

export const Globe = ({ width, height, classes, color }) => {
  // ** State
  // className={classes} width={width} height={height}
  return (
    <svg className={classes} width={width} height={height} viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g clipPath="url(#clip0_955_3348)">
    <path d="M12.4998 2.04849C11.7106 1.80062 10.8708 1.66699 9.99984 1.66699C5.39746 1.66699 1.6665 5.39795 1.6665 10.0003C1.6665 14.6027 5.39746 18.3337 9.99984 18.3337C14.6022 18.3337 18.3332 14.6027 18.3332 10.0003C18.3332 8.57089 17.9733 7.22551 17.3391 6.04986M14.1665 4.79199H14.1707M8.74988 18.2405L8.74997 16.4044C8.74998 16.305 8.78556 16.2088 8.85028 16.1333L10.9218 13.7165C11.092 13.5179 11.0393 13.2134 10.8121 13.0836L8.43195 11.7234C8.36728 11.6865 8.3137 11.6329 8.27678 11.5682L6.72522 8.84918C6.64447 8.70767 6.48865 8.62621 6.32636 8.64067L1.71999 9.05095M17.4998 5.00033C17.4998 6.84127 15.8332 8.33366 14.1665 10.0003C12.4998 8.33366 10.8332 6.84127 10.8332 5.00033C10.8332 3.15938 12.3256 1.66699 14.1665 1.66699C16.0075 1.66699 17.4998 3.15938 17.4998 5.00033ZM14.3748 4.79199C14.3748 4.90705 14.2816 5.00033 14.1665 5.00033C14.0514 5.00033 13.9582 4.90705 13.9582 4.79199C13.9582 4.67693 14.0514 4.58366 14.1665 4.58366C14.2816 4.58366 14.3748 4.67693 14.3748 4.79199Z" stroke="white" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
    </g>
    <defs>
    <clipPath id="clip0_955_3348">
    <rect width="20" height="20" fill="white"/>
    </clipPath>
    </defs>
    </svg>

)
}
export const CheckVerified = ({ width, height, classes, color }) => {
  // ** State
  // className={classes} width={width} height={height}
  return (
    <svg className={classes} width={width} height={height} viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g clipPath="url(#clip0_955_4512)">
    <path d="M7.49984 10.0003L9.1665 11.667L12.9165 7.91699M14.9175 4.16575C15.0891 4.58077 15.4185 4.91066 15.8332 5.08289L17.2875 5.68531C17.7026 5.85723 18.0323 6.18699 18.2042 6.60204C18.3762 7.0171 18.3762 7.48345 18.2042 7.8985L17.6023 9.35183C17.4303 9.76707 17.43 10.2339 17.6028 10.6489L18.2037 12.1018C18.289 12.3074 18.3328 12.5277 18.3329 12.7503C18.3329 12.9728 18.2891 13.1932 18.2039 13.3988C18.1188 13.6044 17.994 13.7912 17.8366 13.9485C17.6792 14.1059 17.4924 14.2306 17.2867 14.3157L15.8335 14.9177C15.4185 15.0893 15.0886 15.4187 14.9164 15.8335L14.314 17.2878C14.142 17.7029 13.8123 18.0327 13.3973 18.2046C12.9822 18.3765 12.5159 18.3765 12.1008 18.2046L10.6476 17.6026C10.2325 17.4311 9.76636 17.4314 9.35157 17.6036L7.89725 18.2051C7.48244 18.3766 7.01651 18.3765 6.60181 18.2047C6.18711 18.0329 5.85755 17.7036 5.68551 17.289L5.08294 15.8342C4.91134 15.4191 4.58196 15.0892 4.16721 14.917L2.71289 14.3146C2.29803 14.1427 1.96838 13.8132 1.79641 13.3984C1.62443 12.9836 1.62419 12.5174 1.79576 12.1024L2.39772 10.6491C2.56922 10.2341 2.56887 9.76787 2.39675 9.35306L1.79565 7.89765C1.71042 7.69208 1.66654 7.47172 1.6665 7.24919C1.66647 7.02665 1.71028 6.80628 1.79544 6.60069C1.8806 6.39509 2.00543 6.20829 2.16281 6.05095C2.32019 5.89362 2.50702 5.76884 2.71264 5.68375L4.16592 5.08176C4.58056 4.9103 4.91024 4.58133 5.08259 4.16704L5.68499 2.71267C5.8569 2.29761 6.18665 1.96785 6.60169 1.79593C7.01673 1.62401 7.48306 1.62401 7.8981 1.79593L9.35138 2.39792C9.76643 2.56942 10.2326 2.56907 10.6474 2.39695L12.1023 1.79687C12.5173 1.62504 12.9835 1.62508 13.3985 1.79696C13.8134 1.96885 14.1431 2.29852 14.3151 2.71346L14.9177 4.16827L14.9175 4.16575Z" stroke="white" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
    </g>
    <defs>
    <clipPath id="clip0_955_4512">
    <rect width="20" height="20" fill="white"/>
    </clipPath>
    </defs>
    </svg>


)
}
export const NotAvailable = ({ width, height, classes, color }) => {
  // ** State
  // className={classes} width={width} height={height}
  return (
    <svg className={classes} width={width} height={height} viewBox="0 0 286 149" fill="none" xmlns="http://www.w3.org/2000/svg">
    <rect width="286" height="149" rx="8" fill="#F3F4F6"/>
    <path d="M135.272 68.2279L141.869 61.6314C142.265 61.2354 142.463 61.0373 142.691 60.9632C142.892 60.8979 143.108 60.8979 143.309 60.9632C143.537 61.0373 143.735 61.2354 144.131 61.6314L150.684 68.1839M145 62.5L147.869 59.6314C148.265 59.2354 148.463 59.0373 148.691 58.9632C148.892 58.8979 149.108 58.8979 149.309 58.9632C149.537 59.0373 149.735 59.2354 150.131 59.6314L153 62.5M141 56.5C141 57.6046 140.105 58.5 139 58.5C137.895 58.5 137 57.6046 137 56.5C137 55.3954 137.895 54.5 139 54.5C140.105 54.5 141 55.3954 141 56.5ZM137.8 68.5H148.2C149.88 68.5 150.72 68.5 151.362 68.173C151.926 67.8854 152.385 67.4265 152.673 66.862C153 66.2202 153 65.3802 153 63.7V55.3C153 53.6198 153 52.7798 152.673 52.138C152.385 51.5735 151.926 51.1146 151.362 50.827C150.72 50.5 149.88 50.5 148.2 50.5H137.8C136.12 50.5 135.28 50.5 134.638 50.827C134.074 51.1146 133.615 51.5735 133.327 52.138C133 52.7798 133 53.6198 133 55.3V63.7C133 65.3802 133 66.2202 133.327 66.862C133.615 67.4265 134.074 67.8854 134.638 68.173C135.28 68.5 136.12 68.5 137.8 68.5Z" stroke="#A0A8B3" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
    <path d="M122.462 93.298C123.321 93.0273 124.124 92.892 124.87 92.892C126.018 92.892 126.9 93.2513 127.516 93.97C128.03 94.586 128.286 95.3933 128.286 96.392V98.17C128.286 98.534 128.165 98.8467 127.922 99.108C127.68 99.3693 127.386 99.5 127.04 99.5H124.128C123.344 99.5 122.752 99.724 122.35 100.172C122.061 100.489 121.912 100.928 121.902 101.488C121.93 103.019 122.85 103.784 124.66 103.784C125.239 103.784 125.85 103.709 126.494 103.56V104.008L126.004 104.624C125.622 104.727 125.118 104.778 124.492 104.778C123.307 104.778 122.378 104.479 121.706 103.882C121.053 103.313 120.722 102.519 120.712 101.502C120.731 100.643 120.96 99.976 121.398 99.5C122.014 98.8373 122.98 98.506 124.296 98.506H126.564C126.919 98.506 127.096 98.3287 127.096 97.974V96.35C127.096 95.622 126.91 95.048 126.536 94.628C126.107 94.1613 125.491 93.928 124.688 93.928C124.203 93.928 123.461 94.0307 122.462 94.236V93.298ZM131.231 89.476V97.974C131.231 98.1233 131.278 98.2493 131.371 98.352C131.474 98.4547 131.605 98.506 131.763 98.506H131.945V99.5H131.301C131.003 99.5 130.741 99.402 130.517 99.206C130.2 98.9353 130.041 98.59 130.041 98.17V89.476H131.231ZM133.291 89.98C133.487 89.98 133.651 90.05 133.781 90.19C133.912 90.3207 133.977 90.4793 133.977 90.666C133.977 90.862 133.912 91.03 133.781 91.17C133.651 91.3007 133.487 91.366 133.291 91.366C133.105 91.366 132.941 91.3007 132.801 91.17C132.671 91.03 132.605 90.862 132.605 90.666C132.605 90.4793 132.671 90.3207 132.801 90.19C132.941 90.05 133.105 89.98 133.291 89.98ZM134.999 89.98C135.186 89.98 135.345 90.05 135.475 90.19C135.615 90.3207 135.685 90.4793 135.685 90.666C135.685 90.862 135.615 91.03 135.475 91.17C135.345 91.3007 135.186 91.366 134.999 91.366C134.803 91.366 134.635 91.3007 134.495 91.17C134.365 91.03 134.299 90.862 134.299 90.666C134.299 90.4793 134.365 90.3207 134.495 90.19C134.635 90.05 134.803 89.98 134.999 89.98ZM135.559 93.06V98.17C135.559 98.282 135.545 98.394 135.517 98.506H136.259V99.5H135.713L135.307 99.01H135.265C135.013 99.3367 134.687 99.5 134.285 99.5H131.849V98.506H133.837C133.987 98.506 134.108 98.4593 134.201 98.366C134.313 98.2633 134.369 98.1327 134.369 97.974V93.06H135.559ZM138.676 95.44C138.676 94.488 139.012 93.788 139.684 93.34C140.123 93.0507 140.706 92.906 141.434 92.906C142.321 92.906 143.063 93.2093 143.66 93.816C144.257 94.4227 144.556 95.272 144.556 96.364C144.556 97.3813 144.257 98.24 143.66 98.94C143.1 99.5933 142.391 99.92 141.532 99.92C140.729 99.92 140.076 99.6167 139.572 99.01C139.32 99.3367 138.984 99.5 138.564 99.5H136.156V98.506H138.144C138.293 98.506 138.419 98.4547 138.522 98.352C138.625 98.2493 138.676 98.1233 138.676 97.974V95.44ZM139.866 98.184C140.351 98.6787 140.888 98.926 141.476 98.926C142.036 98.926 142.489 98.6973 142.834 98.24C143.189 97.7733 143.366 97.1713 143.366 96.434C143.366 95.6127 143.161 94.964 142.75 94.488C142.405 94.096 141.947 93.9 141.378 93.9C140.949 93.9 140.599 94.026 140.328 94.278C140.02 94.5673 139.866 94.9547 139.866 95.44V98.184ZM152.426 93.06V98.506H153.14V99.5H152.426C152.398 100.667 151.983 101.539 151.18 102.118C150.536 102.594 149.701 102.832 148.674 102.832C148.516 102.832 148.315 102.827 148.072 102.818L147.61 102.244V101.796C147.881 101.833 148.175 101.852 148.492 101.852C150.322 101.852 151.236 101.012 151.236 99.332V93.06H152.426ZM156.751 93.06V98.17C156.751 98.282 156.737 98.394 156.709 98.506H157.451V99.5H156.905L156.499 99.01H156.457C156.205 99.3367 155.878 99.5 155.477 99.5H153.041V98.506H155.029C155.178 98.506 155.299 98.4593 155.393 98.366C155.505 98.2633 155.561 98.1327 155.561 97.974V93.06H156.751ZM154.357 100.956C154.543 100.956 154.702 101.021 154.833 101.152C154.973 101.292 155.043 101.455 155.043 101.642C155.043 101.838 154.973 102.001 154.833 102.132C154.702 102.272 154.543 102.342 154.357 102.342C154.17 102.342 154.007 102.272 153.867 102.132C153.736 102.001 153.671 101.838 153.671 101.642C153.671 101.455 153.736 101.292 153.867 101.152C154.007 101.021 154.17 100.956 154.357 100.956ZM156.051 100.956C156.247 100.956 156.41 101.021 156.541 101.152C156.681 101.292 156.751 101.455 156.751 101.642C156.751 101.838 156.681 102.001 156.541 102.132C156.41 102.272 156.247 102.342 156.051 102.342C155.864 102.342 155.701 102.272 155.561 102.132C155.43 102.001 155.365 101.838 155.365 101.642C155.365 101.455 155.43 101.292 155.561 101.152C155.701 101.021 155.864 100.956 156.051 100.956ZM162.793 89.98C162.98 89.98 163.139 90.05 163.269 90.19C163.409 90.3207 163.479 90.4793 163.479 90.666C163.479 90.862 163.409 91.03 163.269 91.17C163.139 91.3007 162.98 91.366 162.793 91.366C162.607 91.366 162.443 91.3007 162.303 91.17C162.173 91.03 162.107 90.862 162.107 90.666C162.107 90.4793 162.173 90.3207 162.303 90.19C162.443 90.05 162.607 89.98 162.793 89.98ZM160.413 98.506C159.807 97.8807 159.503 97.078 159.503 96.098C159.503 95.0527 159.849 94.2313 160.539 93.634C161.118 93.1393 161.865 92.892 162.779 92.892C163.274 92.892 163.792 92.9713 164.333 93.13V94.068C163.783 93.928 163.302 93.858 162.891 93.858C162.201 93.858 161.659 94.0727 161.267 94.502C160.885 94.922 160.693 95.5053 160.693 96.252C160.693 96.8587 160.899 97.3953 161.309 97.862C161.692 98.2913 162.135 98.506 162.639 98.506H165.467V98.898L164.977 99.5H157.347V98.506H160.413Z" fill="#A0A8B3"/>
    </svg>

)
}
export const Location = ({ width, height, classes, color }) => {
  // ** State
  // className={classes} width={width} height={height}
  return (
<svg className={classes} width={width} height={height} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M12 13C13.6569 13 15 11.6569 15 10C15 8.34315 13.6569 7 12 7C10.3431 7 9 8.34315 9 10C9 11.6569 10.3431 13 12 13Z" stroke="#4788C6" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
<path d="M12 22C16 18 20 14.4183 20 10C20 5.58172 16.4183 2 12 2C7.58172 2 4 5.58172 4 10C4 14.4183 8 18 12 22Z" stroke="#4788C6" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</svg>
)
}

export const HomeResponsive = () => {

  return (
<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M9 21V13.6C9 13.0399 9 12.7599 9.109 12.546C9.20487 12.3578 9.35785 12.2049 9.54601 12.109C9.75993 12 10.04 12 10.6 12H13.4C13.9601 12 14.2401 12 14.454 12.109C14.6422 12.2049 14.7951 12.3578 14.891 12.546C15 12.7599 15 13.0399 15 13.6V21M2 9.5L11.04 2.72C11.3843 2.46181 11.5564 2.33271 11.7454 2.28294C11.9123 2.23902 12.0877 2.23902 12.2546 2.28295C12.4436 2.33271 12.6157 2.46181 12.96 2.72L22 9.5M4 8V17.8C4 18.9201 4 19.4802 4.21799 19.908C4.40974 20.2843 4.7157 20.5903 5.09202 20.782C5.51985 21 6.0799 21 7.2 21H16.8C17.9201 21 18.4802 21 18.908 20.782C19.2843 20.5903 19.5903 20.2843 19.782 19.908C20 19.4802 20 18.9201 20 17.8V8L13.92 3.44C13.2315 2.92361 12.8872 2.66542 12.5091 2.56589C12.1754 2.47804 11.8246 2.47804 11.4909 2.56589C11.1128 2.66542 10.7685 2.92361 10.08 3.44L4 8Z" stroke="#A0A8B3" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</svg>
)
}

export const CompanyResponsive = () => {

  return (
<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M3 7.00002V15M7.5 7.00002V15M12.5 7.00002V15M17 7.00002V15M1 16.6L1 17.4C1 17.9601 1 18.2401 1.10899 18.454C1.20487 18.6422 1.35785 18.7952 1.54601 18.891C1.75992 19 2.03995 19 2.6 19H17.4C17.9601 19 18.2401 19 18.454 18.891C18.6422 18.7952 18.7951 18.6422 18.891 18.454C19 18.2401 19 17.9601 19 17.4V16.6C19 16.04 19 15.7599 18.891 15.546C18.7951 15.3579 18.6422 15.2049 18.454 15.109C18.2401 15 17.9601 15 17.4 15H2.6C2.03995 15 1.75992 15 1.54601 15.109C1.35785 15.2049 1.20487 15.3579 1.10899 15.546C1 15.7599 1 16.04 1 16.6ZM9.65291 1.07715L2.25291 2.7216C1.80585 2.82094 1.58232 2.87062 1.41546 2.99082C1.26829 3.09685 1.15273 3.24092 1.08115 3.40759C1 3.59654 1 3.82553 1 4.28349L1 5.40002C1 5.96007 1 6.2401 1.10899 6.45401C1.20487 6.64217 1.35785 6.79515 1.54601 6.89103C1.75992 7.00002 2.03995 7.00002 2.6 7.00002H17.4C17.9601 7.00002 18.2401 7.00002 18.454 6.89103C18.6422 6.79515 18.7951 6.64217 18.891 6.45401C19 6.2401 19 5.96007 19 5.40002V4.2835C19 3.82553 19 3.59655 18.9188 3.40759C18.8473 3.24092 18.7317 3.09685 18.5845 2.99082C18.4177 2.87062 18.1942 2.82094 17.7471 2.7216L10.3471 1.07715C10.2176 1.04837 10.1528 1.03398 10.0874 1.02824C10.0292 1.02314 9.97077 1.02314 9.91264 1.02824C9.8472 1.03398 9.78244 1.04837 9.65291 1.07715Z" stroke="#A0A8B3" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</svg>
)
}

export const CarResponsive = () => {

  return (
<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M20.7611 9.65038C20.7477 9.63498 20.7362 9.61998 20.7203 9.60499L20.0194 8.93332C20.6007 8.80239 21.2265 8.31881 21.2265 7.82266C21.2265 7.24463 20.4186 7.03952 19.7292 7.03952C19.0083 7.03952 18.9246 7.53 18.9161 7.87657L17.1078 6.14532C16.7404 5.78415 16.0436 5.5 15.5227 5.5H12.0008H12H8.47726C7.95681 5.5 7.26043 5.78415 6.89264 6.14532L5.08474 7.87657C5.07535 7.53 4.99167 7.03952 4.27161 7.03952C3.58135 7.03952 2.77394 7.24463 2.77394 7.82266C2.77394 8.31881 3.40011 8.80239 3.98139 8.93332L3.28051 9.60499C3.26459 9.61998 3.25357 9.63498 3.23969 9.65038C2.48984 10.2868 2 11.4672 2 12.3237V14.8689C2 15.4866 2.24533 16.0472 2.64169 16.4651V17.4522C2.64169 18.0294 3.12826 18.5 3.72667 18.5H5.03862C5.63703 18.5 6.12319 18.0302 6.12319 17.4522V17.1996H12H12.0008H17.8772V17.4522C17.8772 18.0302 18.363 18.5 18.9622 18.5H20.2737C20.8726 18.5 21.3583 18.0294 21.3583 17.4522V16.4651C21.7551 16.0472 22 15.4866 22 14.8689V12.3237C22.0008 11.4672 21.511 10.2868 20.7611 9.65038ZM7.55678 6.91467C7.81109 6.7043 8.25561 6.54459 8.47726 6.54459H12H12.0008H15.5236C15.7452 6.54459 16.1897 6.7043 16.444 6.91467L18.8153 9.1968H12.0008H12H5.18597L7.55678 6.91467ZM2.81354 11.9386C2.81354 11.3119 3.30745 10.8032 3.9173 10.8032C4.52674 10.8032 6.51833 11.9641 6.51833 12.5908C6.51833 13.2175 4.52674 13.0724 3.9173 13.0724C3.30745 13.0724 2.81354 12.5657 2.81354 11.9386ZM6.1236 16.0837H5.91338H5.70316L4.45612 16.0857C4.10997 15.9787 3.86587 15.8539 3.6932 15.7197C3.60585 15.652 3.5389 15.5815 3.48665 15.5113C3.43399 15.4404 3.39562 15.3707 3.37072 15.301C3.21561 14.8656 3.53604 14.4655 3.53604 14.4655H5.66438L7.08327 16.0829L6.1236 16.0837ZM15.0607 16.0845H12.0008H12H8.94016C8.30215 16.0845 7.78415 15.5701 7.78415 14.937H12H12.0008H16.2167C16.2167 15.5709 15.6987 16.0845 15.0607 16.0845ZM15.3293 14.1538H12.0008H12H8.67156C7.97763 14.1538 7.41432 13.3042 7.41432 12.2564H12H12.0008H16.5865C16.5865 13.3046 16.0232 14.1538 15.3293 14.1538ZM20.6305 15.3018C20.6052 15.3715 20.5668 15.4412 20.5142 15.5118C20.4623 15.5819 20.3954 15.6524 20.3076 15.7201C20.1354 15.8543 19.8908 15.9799 19.5447 16.0861L18.2977 16.0841H18.0874H17.8772H16.9167L18.3364 14.4668H20.4644C20.4644 14.4664 20.7852 14.8656 20.6305 15.3018ZM20.0835 13.0724C19.4745 13.0724 17.4829 13.2167 17.4829 12.5908C17.4829 11.9649 19.4745 10.8032 20.0835 10.8032C20.6934 10.8032 21.1873 11.3119 21.1873 11.9386C21.1873 12.5649 20.6934 13.0724 20.0835 13.0724Z" fill="#A0A8B3"/>
</svg>

)
}

export const EmployeeResponsive = () => {

  return (
<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M20 21C20 19.6044 20 18.9066 19.8278 18.3389C19.44 17.0604 18.4395 16.06 17.1611 15.6722C16.5933 15.5 15.8956 15.5 14.5 15.5H9.5C8.10444 15.5 7.40665 15.5 6.83886 15.6722C5.56045 16.06 4.56004 17.0604 4.17224 18.3389C4 18.9066 4 19.6044 4 21M16.5 7.5C16.5 9.98528 14.4853 12 12 12C9.51472 12 7.5 9.98528 7.5 7.5C7.5 5.01472 9.51472 3 12 3C14.4853 3 16.5 5.01472 16.5 7.5Z" stroke="#A0A8B3" strokeWidth="2.33333" strokeLinecap="round" strokeLinejoin="round"/>
</svg>

)
}

export const HelpCenterResponsive = () => {

  return (
<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M10 15L6.92474 18.1137C6.49579 18.548 6.28131 18.7652 6.09695 18.7805C5.93701 18.7938 5.78042 18.7295 5.67596 18.6076C5.55556 18.4672 5.55556 18.162 5.55556 17.5515V15.9916C5.55556 15.444 5.10707 15.0477 4.5652 14.9683V14.9683C3.25374 14.7762 2.22378 13.7463 2.03168 12.4348C2 12.2186 2 11.9605 2 11.4444V6.8C2 5.11984 2 4.27976 2.32698 3.63803C2.6146 3.07354 3.07354 2.6146 3.63803 2.32698C4.27976 2 5.11984 2 6.8 2H14.2C15.8802 2 16.7202 2 17.362 2.32698C17.9265 2.6146 18.3854 3.07354 18.673 3.63803C19 4.27976 19 5.11984 19 6.8V11M19 22L16.8236 20.4869C16.5177 20.2742 16.3647 20.1678 16.1982 20.0924C16.0504 20.0255 15.8951 19.9768 15.7356 19.9474C15.5558 19.9143 15.3695 19.9143 14.9969 19.9143H13.2C12.0799 19.9143 11.5198 19.9143 11.092 19.6963C10.7157 19.5046 10.4097 19.1986 10.218 18.8223C10 18.3944 10 17.8344 10 16.7143V14.2C10 13.0799 10 12.5198 10.218 12.092C10.4097 11.7157 10.7157 11.4097 11.092 11.218C11.5198 11 12.0799 11 13.2 11H18.8C19.9201 11 20.4802 11 20.908 11.218C21.2843 11.4097 21.5903 11.7157 21.782 12.092C22 12.5198 22 13.0799 22 14.2V16.9143C22 17.8462 22 18.3121 21.8478 18.6797C21.6448 19.1697 21.2554 19.5591 20.7654 19.762C20.3978 19.9143 19.9319 19.9143 19 19.9143V22Z" stroke="#A0A8B3" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</svg>

)
}

export const Eye = () => {

  return (
<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M2.42012 12.7132C2.28394 12.4975 2.21584 12.3897 2.17772 12.2234C2.14909 12.0985 2.14909 11.9015 2.17772 11.7766C2.21584 11.6103 2.28394 11.5025 2.42012 11.2868C3.54553 9.50484 6.8954 5 12.0004 5C17.1054 5 20.4553 9.50484 21.5807 11.2868C21.7169 11.5025 21.785 11.6103 21.8231 11.7766C21.8517 11.9015 21.8517 12.0985 21.8231 12.2234C21.785 12.3897 21.7169 12.4975 21.5807 12.7132C20.4553 14.4952 17.1054 19 12.0004 19C6.8954 19 3.54553 14.4952 2.42012 12.7132Z" stroke="#4788C6" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
<path d="M12.0004 15C13.6573 15 15.0004 13.6569 15.0004 12C15.0004 10.3431 13.6573 9 12.0004 9C10.3435 9 9.0004 10.3431 9.0004 12C9.0004 13.6569 10.3435 15 12.0004 15Z" stroke="#4788C6" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</svg>


)
}

export const EyeSplash = () => {

  return (
<svg width="22" height="20" viewBox="0 0 22 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M9.74294 3.09232C10.1494 3.03223 10.5686 3 11.0004 3C16.1054 3 19.4553 7.50484 20.5807 9.28682C20.7169 9.5025 20.785 9.61034 20.8231 9.77667C20.8518 9.90159 20.8517 10.0987 20.8231 10.2236C20.7849 10.3899 20.7164 10.4985 20.5792 10.7156C20.2793 11.1901 19.8222 11.8571 19.2165 12.5805M5.72432 4.71504C3.56225 6.1817 2.09445 8.21938 1.42111 9.28528C1.28428 9.50187 1.21587 9.61016 1.17774 9.77648C1.1491 9.9014 1.14909 10.0984 1.17771 10.2234C1.21583 10.3897 1.28393 10.4975 1.42013 10.7132C2.54554 12.4952 5.89541 17 11.0004 17C13.0588 17 14.8319 16.2676 16.2888 15.2766M2.00042 1L20.0004 19M8.8791 7.87868C8.3362 8.42157 8.00042 9.17157 8.00042 10C8.00042 11.6569 9.34356 13 11.0004 13C11.8288 13 12.5788 12.6642 13.1217 12.1213" stroke="#A0A8B3" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</svg>

)
}

export const Menu = () => {

  return (
<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M3 12H21M3 6H21M3 18H15" stroke="#4788C6" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</svg>




)
}

